{
  "openapi": "3.1.0",
  "info": {
    "title": "VFIED Food & Travel Intelligence API",
    "description": "AI-powered, culturally-aware food recommendations with integrated travel coaching, events discovery, restaurant partner management, and smart mood detection. Complete two-sided marketplace with data freshness tracking, offline support, and quality assurance features.",
    "version": "2.3.0",
    "contact": {
      "name": "VFIED Support",
      "email": "api@vfied.com",
      "url": "https://vfied.com/support"
    },
    "license": {
      "name": "Proprietary",
      "url": "https://vfied.com/license"
    }
  },
  "servers": [
    { "url": "https://vfied-v3.onrender.com", "description": "Production server" },
    { "url": "https://staging-vfied.onrender.com", "description": "Staging server" },
    { "url": "http://localhost:3048", "description": "Development server" }
  ],
  "tags": [
    { "name": "Health", "description": "Service health and status endpoints" },
    { "name": "Suggest", "description": "AI-powered food recommendations" },
    { "name": "Travel", "description": "Travel planning and coaching" },
    { "name": "Events", "description": "Food and cultural events discovery" },
    { "name": "Restaurants", "description": "Restaurant partner management" },
    { "name": "Menus", "description": "Menu management and items" },
    { "name": "Admin", "description": "Administrative and analytics endpoints" },
    { "name": "Data", "description": "Reference data and coverage info" },
    { "name": "Meta", "description": "Feedback and tracking" },
    { "name": "Auth", "description": "Authentication and user management" },
    { "name": "BackCompat", "description": "Legacy MCP compatibility" }
  ],
  "security": [
    {"BearerAuth": []},
    {"ApiKeyAuth": []}
  ],
  "paths": {
    "/health": {
      "get": {
        "tags": ["Health"],
        "summary": "Health check with service status and coverage info",
        "operationId": "healthCheck",
        "security": [],
        "responses": {
          "200": {
            "description": "Service health status with performance metrics",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": { "type": "string" },
                    "service": { "type": "string" },
                    "version": { "type": "string" },
                    "features": { "type": "array", "items": { "type": "string" } },
                    "services": {
                      "type": "object",
                      "properties": {
                        "gpt": { "type": "string", "enum": ["on", "off"] },
                        "weather": { "type": "string", "enum": ["on", "off"] },
                        "events_provider": { "type": "string", "enum": ["on", "off"] },
                        "restaurant_db": { "type": "string", "enum": ["on", "off"] }
                      }
                    },
                    "timestamp": { "type": "string", "format": "date-time" },
                    "uptime": { "type": "integer", "description": "Uptime in seconds" },
                    "response_time_ms": { "type": "number" }
                  }
                }
              }
            }
          },
          "503": {
            "$ref": "#/components/responses/ServiceUnavailable"
          }
        }
      }
    },

    "/v1/auth/login": {
      "post": {
        "tags": ["Auth"],
        "summary": "Authenticate restaurant partner or admin",
        "operationId": "login",
        "security": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": ["email", "password"],
                "properties": {
                  "email": { "type": "string", "format": "email" },
                  "password": { "type": "string", "minLength": 8 },
                  "role": { "type": "string", "enum": ["restaurant", "admin"], "default": "restaurant" }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Authentication successful",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": ["success", "token", "user"],
                  "properties": {
                    "success": { "type": "boolean" },
                    "token": { "type": "string", "description": "JWT access token" },
                    "refresh_token": { "type": "string" },
                    "expires_in": { "type": "integer", "description": "Token expiry in seconds" },
                    "user": { "$ref": "#/components/schemas/User" }
                  }
                }
              }
            }
          },
          "401": { "$ref": "#/components/responses/Unauthorized" },
          "400": { "$ref": "#/components/responses/BadRequest" }
        }
      }
    },

    "/v1/auth/refresh": {
      "post": {
        "tags": ["Auth"],
        "summary": "Refresh access token",
        "operationId": "refreshToken",
        "security": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": ["refresh_token"],
                "properties": {
                  "refresh_token": { "type": "string" }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Token refreshed successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": { "type": "boolean" },
                    "token": { "type": "string" },
                    "expires_in": { "type": "integer" }
                  }
                }
              }
            }
          },
          "401": { "$ref": "#/components/responses/Unauthorized" }
        }
      }
    },

    "/v1/quick_decision": {
      "post": {
        "tags": ["Suggest"],
        "summary": "Return a fast 3-item shortlist",
        "operationId": "quickDecision",
        "security": [],
        "requestBody": {
          "required": false,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "location": { "$ref": "#/components/schemas/Location" },
                  "dietary": { "type": "array", "items": { "$ref": "#/components/schemas/DietaryTag" } },
                  "time_context": { "$ref": "#/components/schemas/TimeContext" }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Three quick picks",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": ["success", "decisions"],
                  "properties": {
                    "success": { "type": "boolean" },
                    "request_id": { "type": "string" },
                    "decisions": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "required": ["name", "emoji"],
                        "properties": {
                          "name": { "type": "string" },
                          "emoji": { "type": "string" },
                          "explanation": { "type": "string" },
                          "restaurant_partner": { "type": "boolean", "description": "Whether this item is from a partner restaurant" }
                        }
                      }
                    },
                    "location": {
                      "type": "object",
                      "properties": {
                        "city": { "type": "string" },
                        "country_code": { "type": "string" }
                      }
                    },
                    "processingTimeMs": { "type": "integer" },
                    "note": { "type": "string" }
                  }
                }
              }
            }
          },
          "429": { "$ref": "#/components/responses/RateLimitExceeded" }
        }
      }
    },

    "/v1/recommend": {
      "post": {
        "tags": ["Suggest"],
        "summary": "AI-powered personalized recommendation with data quality indicators",
        "operationId": "recommend",
        "security": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": { "schema": { "$ref": "#/components/schemas/RecommendRequest" } }
          }
        },
        "responses": {
          "200": {
            "description": "Enhanced recommendation with quality metrics and freshness indicators",
            "content": {
              "application/json": { "schema": { "$ref": "#/components/schemas/EnhancedRecommendResponse" } }
            }
          },
          "400": { "$ref": "#/components/responses/BadRequest" },
          "429": { "$ref": "#/components/responses/RateLimitExceeded" }
        }
      }
    },

    "/v1/restaurants/signup": {
      "post": {
        "tags": ["Restaurants"],
        "summary": "Restaurant partner registration",
        "operationId": "restaurantSignup",
        "security": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": ["restaurant", "contact", "plan"],
                "properties": {
                  "restaurant": { "$ref": "#/components/schemas/RestaurantInfo" },
                  "contact": { "$ref": "#/components/schemas/ContactInfo" },
                  "plan": { "type": "string", "enum": ["free", "growth", "scale"], "default": "free" },
                  "marketing_consent": { "type": "boolean", "default": false },
                  "terms_accepted": { "type": "boolean" }
                }
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Restaurant registered successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": ["success", "restaurant_id", "credentials"],
                  "properties": {
                    "success": { "type": "boolean" },
                    "restaurant_id": { "type": "string" },
                    "credentials": {
                      "type": "object",
                      "properties": {
                        "api_key": { "type": "string" },
                        "secret": { "type": "string" }
                      }
                    },
                    "onboarding_checklist": {
                      "type": "array",
                      "items": { "type": "string" }
                    },
                    "next_steps": { "type": "string" }
                  }
                }
              }
            }
          },
          "409": {
            "description": "Restaurant already exists",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Error" }
              }
            }
          },
          "400": { "$ref": "#/components/responses/BadRequest" }
        }
      }
    },

    "/v1/restaurants/profile": {
      "get": {
        "tags": ["Restaurants"],
        "summary": "Get restaurant profile",
        "operationId": "getRestaurantProfile",
        "responses": {
          "200": {
            "description": "Restaurant profile",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": { "type": "boolean" },
                    "restaurant": { "$ref": "#/components/schemas/RestaurantProfile" }
                  }
                }
              }
            }
          },
          "401": { "$ref": "#/components/responses/Unauthorized" },
          "404": { "$ref": "#/components/responses/NotFound" }
        }
      },
      "put": {
        "tags": ["Restaurants"],
        "summary": "Update restaurant profile",
        "operationId": "updateRestaurantProfile",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": { "$ref": "#/components/schemas/RestaurantInfo" }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Profile updated successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": { "type": "boolean" },
                    "restaurant": { "$ref": "#/components/schemas/RestaurantProfile" }
                  }
                }
              }
            }
          },
          "401": { "$ref": "#/components/responses/Unauthorized" },
          "400": { "$ref": "#/components/responses/BadRequest" }
        }
      }
    },

    "/v1/menus": {
      "get": {
        "tags": ["Menus"],
        "summary": "Get restaurant menu items",
        "operationId": "getMenuItems",
        "parameters": [
          {
            "name": "category",
            "in": "query",
            "schema": { "type": "string" },
            "description": "Filter by menu category"
          },
          {
            "name": "availability",
            "in": "query",
            "schema": { "type": "string", "enum": ["in_stock", "sold_out", "limited"] },
            "description": "Filter by availability status"
          }
        ],
        "responses": {
          "200": {
            "description": "Menu items list",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": ["success", "items"],
                  "properties": {
                    "success": { "type": "boolean" },
                    "items": {
                      "type": "array",
                      "items": { "$ref": "#/components/schemas/MenuItem" }
                    },
                    "categories": {
                      "type": "array",
                      "items": { "type": "string" }
                    },
                    "total_count": { "type": "integer" }
                  }
                }
              }
            }
          },
          "401": { "$ref": "#/components/responses/Unauthorized" }
        }
      },
      "post": {
        "tags": ["Menus"],
        "summary": "Upload/update restaurant menu",
        "operationId": "uploadMenu",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": ["items"],
                "properties": {
                  "items": {
                    "type": "array",
                    "items": { "$ref": "#/components/schemas/MenuItem" },
                    "maxItems": 500
                  },
                  "replace_existing": {
                    "type": "boolean",
                    "default": false,
                    "description": "Replace entire menu or merge with existing"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Menu uploaded successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": ["success"],
                  "properties": {
                    "success": { "type": "boolean" },
                    "processed": { "type": "integer" },
                    "added": { "type": "integer" },
                    "updated": { "type": "integer" },
                    "errors": {
                      "type": "array",
                      "items": { "type": "string" }
                    }
                  }
                }
              }
            }
          },
          "401": { "$ref": "#/components/responses/Unauthorized" },
          "400": { "$ref": "#/components/responses/BadRequest" }
        }
      }
    },

    "/v1/menus/{itemId}": {
      "put": {
        "tags": ["Menus"],
        "summary": "Update specific menu item",
        "operationId": "updateMenuItem",
        "parameters": [
          {
            "name": "itemId",
            "in": "path",
            "required": true,
            "schema": { "type": "string" },
            "description": "Menu item ID"
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": { "$ref": "#/components/schemas/MenuItem" }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Menu item updated",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": { "type": "boolean" },
                    "item": { "$ref": "#/components/schemas/MenuItem" }
                  }
                }
              }
            }
          },
          "401": { "$ref": "#/components/responses/Unauthorized" },
          "404": { "$ref": "#/components/responses/NotFound" }
        }
      },
      "delete": {
        "tags": ["Menus"],
        "summary": "Remove menu item",
        "operationId": "deleteMenuItem",
        "parameters": [
          {
            "name": "itemId",
            "in": "path",
            "required": true,
            "schema": { "type": "string" }
          }
        ],
        "responses": {
          "204": {
            "description": "Menu item deleted successfully"
          },
          "401": { "$ref": "#/components/responses/Unauthorized" },
          "404": { "$ref": "#/components/responses/NotFound" }
        }
      }
    },

    "/v1/admin/restaurants": {
      "get": {
        "tags": ["Admin"],
        "summary": "List all restaurant partners (Admin only)",
        "operationId": "listRestaurants",
        "parameters": [
          {
            "name": "status",
            "in": "query",
            "schema": { "type": "string", "enum": ["active", "pending", "suspended"] },
            "description": "Filter by restaurant status"
          },
          {
            "name": "plan",
            "in": "query",
            "schema": { "type": "string", "enum": ["free", "growth", "scale"] }
          },
          {
            "name": "page",
            "in": "query",
            "schema": { "type": "integer", "minimum": 1, "default": 1 }
          },
          {
            "name": "limit",
            "in": "query",
            "schema": { "type": "integer", "minimum": 1, "maximum": 100, "default": 20 }
          }
        ],
        "responses": {
          "200": {
            "description": "Restaurant list",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": ["success", "restaurants", "pagination"],
                  "properties": {
                    "success": { "type": "boolean" },
                    "restaurants": {
                      "type": "array",
                      "items": { "$ref": "#/components/schemas/RestaurantProfile" }
                    },
                    "pagination": { "$ref": "#/components/schemas/Pagination" }
                  }
                }
              }
            }
          },
          "401": { "$ref": "#/components/responses/Unauthorized" },
          "403": { "$ref": "#/components/responses/Forbidden" }
        }
      }
    },

    "/v1/admin/summary": {
      "get": {
        "tags": ["Admin"],
        "summary": "Admin dashboard summary",
        "operationId": "getAdminSummary",
        "responses": {
          "200": {
            "description": "Dashboard summary",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": ["success", "summary"],
                  "properties": {
                    "success": { "type": "boolean" },
                    "summary": {
                      "type": "object",
                      "properties": {
                        "total_restaurants": { "type": "integer" },
                        "active_restaurants": { "type": "integer" },
                        "total_recommendations": { "type": "integer" },
                        "api_calls_today": { "type": "integer" },
                        "revenue_this_month": { "type": "number" },
                        "top_cities": {
                          "type": "array",
                          "items": {
                            "type": "object",
                            "properties": {
                              "city": { "type": "string" },
                              "requests": { "type": "integer" }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "401": { "$ref": "#/components/responses/Unauthorized" },
          "403": { "$ref": "#/components/responses/Forbidden" }
        }
      }
    },

    "/v1/admin/telemetry": {
      "get": {
        "tags": ["Admin"],
        "summary": "Feedback and analytics data",
        "operationId": "getTelemetry",
        "parameters": [
          {
            "name": "period",
            "in": "query",
            "schema": { "type": "string", "enum": ["24h", "7d", "30d", "90d"], "default": "7d" }
          },
          {
            "name": "metric",
            "in": "query",
            "schema": { "type": "string", "enum": ["feedback", "usage", "errors", "all"], "default": "all" }
          }
        ],
        "responses": {
          "200": {
            "description": "Telemetry data",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": { "type": "boolean" },
                    "period": { "type": "string" },
                    "feedback_stats": {
                      "type": "object",
                      "properties": {
                        "total_feedback": { "type": "integer" },
                        "positive_votes": { "type": "integer" },
                        "negative_votes": { "type": "integer" },
                        "satisfaction_score": { "type": "number" }
                      }
                    },
                    "usage_stats": {
                      "type": "object",
                      "properties": {
                        "total_requests": { "type": "integer" },
                        "unique_users": { "type": "integer" },
                        "avg_response_time": { "type": "number" }
                      }
                    },
                    "error_stats": {
                      "type": "object",
                      "properties": {
                        "error_rate": { "type": "number" },
                        "common_errors": {
                          "type": "array",
                          "items": { "type": "string" }
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "401": { "$ref": "#/components/responses/Unauthorized" },
          "403": { "$ref": "#/components/responses/Forbidden" }
        }
      }
    },

    "/v1/admin/checklist": {
      "get": {
        "tags": ["Admin"],
        "summary": "MVP feature checklist",
        "operationId": "getMVPChecklist",
        "responses": {
          "200": {
            "description": "MVP features checklist",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": { "type": "boolean" },
                    "mvp_status": {
                      "type": "object",
                      "properties": {
                        "completion_percentage": { "type": "number" },
                        "features": {
                          "type": "array",
                          "items": {
                            "type": "object",
                            "properties": {
                              "name": { "type": "string" },
                              "status": { "type": "string", "enum": ["completed", "in_progress", "planned"] },
                              "priority": { "type": "string", "enum": ["high", "medium", "low"] }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "401": { "$ref": "#/components/responses/Unauthorized" },
          "403": { "$ref": "#/components/responses/Forbidden" }
        }
      }
    },

    "/v1/analytics": {
      "get": {
        "tags": ["Admin"],
        "summary": "API usage analytics",
        "operationId": "getAnalytics",
        "parameters": [
          {
            "name": "restaurant_id",
            "in": "query",
            "schema": { "type": "string" },
            "description": "Filter by specific restaurant (restaurant owners see only their data)"
          },
          {
            "name": "period",
            "in": "query",
            "schema": { "type": "string", "enum": ["today", "week", "month"], "default": "week" }
          }
        ],
        "responses": {
          "200": {
            "description": "Usage analytics",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": { "type": "boolean" },
                    "analytics": {
                      "type": "object",
                      "properties": {
                        "recommendations_served": { "type": "integer" },
                        "menu_views": { "type": "integer" },
                        "conversion_rate": { "type": "number" },
                        "top_recommended_items": {
                          "type": "array",
                          "items": {
                            "type": "object",
                            "properties": {
                              "item_name": { "type": "string" },
                              "recommendations": { "type": "integer" }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "401": { "$ref": "#/components/responses/Unauthorized" }
        }
      }
    },

    "/v1/travel/nightplan": {
      "post": {
        "tags": ["Travel"],
        "summary": "Generate AI-powered night plan with food timeline",
        "operationId": "generateNightPlan",
        "security": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": ["location"],
                "properties": {
                  "location": { "$ref": "#/components/schemas/Location" },
                  "prompt": { "type": "string" },
                  "mode": { "type": "string", "enum": ["exploring", "business", "date", "family"], "default": "exploring" },
                  "budget": { "type": "string", "enum": ["budget", "medium", "premium", "luxury"], "default": "medium" },
                  "duration": { "type": "string", "enum": ["quick", "half-day", "full-day", "weekend"], "default": "full-day" },
                  "dietary": { "type": "array", "items": { "$ref": "#/components/schemas/DietaryTag" } },
                  "include_partner_restaurants": { "type": "boolean", "default": true }
                }
              }
            }
          }
        },
        "responses": {
          "200": { "description": "Night plan with timeline and recommendations", "content": { "application/json": { "schema": { "$ref": "#/components/schemas/NightPlanResponse" } } } },
          "400": { "$ref": "#/components/responses/BadRequest" },
          "429": { "$ref": "#/components/responses/RateLimitExceeded" }
        }
      }
    },

    "/v1/travel/food-crawl": {
      "post": {
        "tags": ["Travel"],
        "summary": "Generate food crawl itinerary with multiple stops",
        "operationId": "generateFoodCrawl",
        "security": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": ["location"],
                "properties": {
                  "location": { "$ref": "#/components/schemas/Location" },
                  "crawl_type": { "type": "string", "enum": ["street_food", "restaurant_hop", "cultural_food", "late_night"], "default": "street_food" },
                  "duration": { "type": "string", "enum": ["2_hours", "3_hours", "half_day", "full_day"], "default": "3_hours" },
                  "budget": { "type": "string", "enum": ["budget", "medium", "premium", "luxury"], "default": "medium" },
                  "dietary": { "type": "array", "items": { "$ref": "#/components/schemas/DietaryTag" } }
                }
              }
            }
          }
        },
        "responses": {
          "200": { "description": "Food crawl with stops and walking route", "content": { "application/json": { "schema": { "$ref": "#/components/schemas/FoodCrawlResponse" } } } },
          "400": { "$ref": "#/components/responses/BadRequest" }
        }
      }
    },

    "/v1/travel/guide/{city}": {
      "get": {
        "tags": ["Travel"],
        "summary": "Get comprehensive city food guide",
        "operationId": "getCityGuide",
        "security": [],
        "parameters": [
          { "name": "city", "in": "path", "required": true, "schema": { "type": "string" } },
          { "name": "country_code", "in": "query", "schema": { "type": "string", "minLength": 2, "maxLength": 2 }, "description": "ISO country code for disambiguation" }
        ],
        "responses": {
          "200": { "description": "Comprehensive city food guide", "content": { "application/json": { "schema": { "$ref": "#/components/schemas/CityGuideResponse" } } } },
          "404": { "$ref": "#/components/responses/NotFound" }
        }
      }
    },

    "/v1/travel/itinerary": {
      "post": {
        "tags": ["Travel"],
        "summary": "Generate day itinerary with food and cultural stops",
        "operationId": "generateItinerary",
        "security": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": ["location"],
                "properties": {
                  "location": { "$ref": "#/components/schemas/Location" },
                  "duration": { "type": "string", "enum": ["one_day", "two_days", "weekend"], "default": "one_day" },
                  "interests": { "type": "array", "items": { "type": "string", "enum": ["food", "culture", "nightlife", "shopping", "history"] }, "default": ["food", "culture"] },
                  "budget": { "type": "string", "enum": ["budget", "medium", "premium", "luxury"], "default": "medium" }
                }
              }
            }
          }
        },
        "responses": {
          "200": { "description": "Day itinerary with timed activities", "content": { "application/json": { "schema": { "$ref": "#/components/schemas/ItineraryResponse" } } } }
        }
      }
    },

    "/v1/travel/coach": {
      "post": {
        "tags": ["Travel"],
        "summary": "AI travel coach for personalized food questions",
        "operationId": "askTravelCoach",
        "security": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": ["query"],
                "properties": {
                  "query": { "type": "string", "description": "Question for the travel coach", "maxLength": 500 },
                  "location": { "$ref": "#/components/schemas/Location" },
                  "context": {
                    "type": "object",
                    "properties": {
                      "mode": { "type": "string", "enum": ["exploring", "business", "date", "family"] },
                      "budget": { "type": "string", "enum": ["budget", "medium", "premium", "luxury"] },
                      "duration": { "type": "string" },
                      "dietary": { "type": "array", "items": { "$ref": "#/components/schemas/DietaryTag" } },
                      "request_type": { "type": "string", "enum": ["general", "hidden_gems", "specific_dish", "neighborhood"] }
                    }
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": { "description": "Personalized travel coach response", "content": { "application/json": { "schema": { "$ref": "#/components/schemas/TravelCoachResponse" } } } }
        }
      }
    },

    "/v1/events": {
      "get": {
        "tags": ["Events"],
        "summary": "Get food-related events in a city",
        "operationId": "getEvents",
        "security": [],
        "parameters": [
          { "name": "city", "in": "query", "required": true, "schema": { "type": "string" } },
          { "name": "country_code", "in": "query", "required": true, "schema": { "type": "string", "minLength": 2, "maxLength": 2 } },
          { "name": "category", "in": "query", "schema": { "type": "string", "enum": ["all", "food", "music", "market", "culture", "nightlife"], "default": "all" } },
          { "name": "time", "in": "query", "schema": { "type": "string", "enum": ["today", "tomorrow", "weekend", "this_week"], "default": "today" } }
        ],
        "responses": {
          "200": {
            "description": "List of events with food context",
            "content": {
              "application/json": { "schema": { "$ref": "#/components/schemas/EventsResponse" } }
            }
          }
        }
      }
    },

    "/v1/feedback": {
      "post": {
        "tags": ["Meta"],
        "summary": "Submit feedback on recommendations",
        "operationId": "submitFeedback",
        "security": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": ["type"],
                "properties": {
                  "type": { "type": "string", "enum": ["rating", "incorrect_info", "closed_restaurant", "wrong_location", "other"] },
                  "interactionId": { "type": "string" },
                  "vote": { "type": "string", "enum": ["positive", "negative"] },
                  "suggestion": { "type": "string", "maxLength": 1000 },
                  "reason": { "type": "string" },
                  "location": { "$ref": "#/components/schemas/Location" },
                  "mood": { "type": "string" },
                  "payload": { "type": "object" },
                  "timestamp": { "type": "string", "format": "date-time" }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Feedback received",
            "content": {
              "application/json": {
                "schema": { "type": "object", "properties": { "success": { "type": "boolean" }, "message": { "type": "string" } } }
              }
            }
          }
        }
      }
    },

    "/v1/analytics/track": {
      "post": {
        "tags": ["Meta"],
        "summary": "Track client analytics events",
        "operationId": "trackAnalytics",
        "security": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": { "schema": { "type": "object", "required": ["event"], "properties": { "event": { "type": "string" }, "data": { "type": "object" } } } }
          }
        },
        "responses": {
          "200": {
            "description": "Tracked",
            "content": { "application/json": { "schema": { "type": "object", "required": ["success"], "properties": { "success": { "type": "boolean" } } } } }
          }
        }
      }
    },

    "/v1/countries": {
      "get": {
        "tags": ["Data"],
        "summary": "List supported countries",
        "operationId": "listCountries",
        "security": [],
        "responses": {
          "200": {
            "description": "Country list",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": ["countries"],
                  "properties": {
                    "countries": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "required": ["name", "country_code"],
                        "properties": {
                          "name": { "type": "string" },
                          "country_code": { "type": "string" },
                          "region": { "type": "string" },
                          "cuisine": { "type": "string" },
                          "partner_restaurants": { "type": "integer", "description": "Number of partner restaurants in this country" }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },

    "/v1/moods": {
      "get": {
        "tags": ["Data"],
        "summary": "List mood taxonomy",
        "operationId": "listMoods",
        "security": [],
        "responses": {
          "200": {
            "description": "Moods",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": ["moods"],
                  "properties": {
                    "moods": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "required": ["id"],
                        "properties": {
                          "id": { "type": "string" },
                          "group": { "type": "string" },
                          "synonyms": { "type": "array", "items": { "type": "string" } }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },

    "/v1/coverage/{city}": {
      "get": {
        "tags": ["Data"],
        "summary": "Check data coverage and quality for a city",
        "operationId": "getCoverage",
        "security": [],
        "parameters": [
          { "name": "city", "in": "path", "required": true, "schema": { "type": "string" } }
        ],
        "responses": {
          "200": {
            "description": "Coverage information for the city",
            "content": { "application/json": { "schema": { "$ref": "#/components/schemas/CoverageResponse" } } }
          }
        }
      }
    },

    "/v1/data-status/{city}": {
      "get": {
        "tags": ["Data"],
        "summary": "Get data freshness status for a city",
        "operationId": "getDataStatus",
        "security": [],
        "parameters": [
          { "name": "city", "in": "path", "required": true, "schema": { "type": "string" } }
        ],
        "responses": {
          "200": {
            "description": "Data freshness and update status",
            "content": { "application/json": { "schema": { "$ref": "#/components/schemas/DataStatusResponse" } } }
          }
        }
      }
    },

    "/mcp/get_food_suggestion": {
      "post": {
        "tags": ["BackCompat"],
        "summary": "Legacy MCP: get a food suggestion",
        "operationId": "mcpGetFoodSuggestion",
        "security": [],
        "deprecated": true,
        "requestBody": {
          "required": false,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "mood": { "type": "string" },
                  "location": { "$ref": "#/components/schemas/Location" },
                  "dietary": { "type": "array", "items": { "$ref": "#/components/schemas/DietaryTag" } }
                }
              }
            }
          }
        },
        "responses": {
          "200": { "description": "Legacy suggestion", "content": { "application/json": { "schema": { "type": "object" } } } }
        }
      }
    },

    "/mcp/get_cultural_food_context": {
      "post": {
        "tags": ["BackCompat"],
        "summary": "Legacy MCP: cultural food context",
        "operationId": "mcpCulturalFoodContext",
        "security": [],
        "deprecated": true,
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": ["location"],
                "properties": {
                  "location": { "$ref": "#/components/schemas/Location" },
                  "dietary": { "type": "array", "items": { "$ref": "#/components/schemas/DietaryTag" } }
                }
              }
            }
          }
        },
        "responses": {
          "200": { "description": "Legacy cultural context", "content": { "application/json": { "schema": { "type": "object" } } } }
        }
      }
    }
  },

  "components": {
    "securitySchemes": {
      "BearerAuth": {
        "type": "http",
        "scheme": "bearer",
        "bearerFormat": "JWT",
        "description": "JWT access token for restaurant partners and admin users"
      },
      "ApiKeyAuth": {
        "type": "apiKey",
        "in": "header",
        "name": "X-API-Key",
        "description": "API key for restaurant partners"
      }
    },

    "responses": {
      "BadRequest": {
        "description": "Bad request - Invalid input parameters",
        "content": {
          "application/json": {
            "schema": { "$ref": "#/components/schemas/Error" }
          }
        }
      },
      "Unauthorized": {
        "description": "Unauthorized - Invalid or missing authentication",
        "content": {
          "application/json": {
            "schema": { "$ref": "#/components/schemas/Error" }
          }
        }
      },
      "Forbidden": {
        "description": "Forbidden - Insufficient permissions",
        "content": {
          "application/json": {
            "schema": { "$ref": "#/components/schemas/Error" }
          }
        }
      },
      "NotFound": {
        "description": "Resource not found",
        "content": {
          "application/json": {
            "schema": { "$ref": "#/components/schemas/Error" }
          }
        }
      },
      "RateLimitExceeded": {
        "description": "Rate limit exceeded - Too many requests",
        "content": {
          "application/json": {
            "schema": {
              "type": "object",
              "properties": {
                "success": { "type": "boolean", "enum": [false] },
                "error": { "type": "string" },
                "retry_after": { "type": "integer", "description": "Seconds to wait before retrying" },
                "limit": { "type": "integer", "description": "Requests per hour limit" },
                "remaining": { "type": "integer", "description": "Remaining requests in current window" }
              }
            }
          }
        }
      },
      "ServiceUnavailable": {
        "description": "Service temporarily unavailable",
        "content": {
          "application/json": {
            "schema": { "$ref": "#/components/schemas/Error" }
          }
        }
      }
    },

    "schemas": {
      "Location": {
        "type": "object",
        "properties": {
          "city": { "type": "string", "description": "City name", "maxLength": 100 },
          "country": { "type": "string", "description": "Country name", "maxLength": 100 },
          "country_code": { "type": "string", "minLength": 2, "maxLength": 2, "description": "ISO 3166-1 alpha-2", "pattern": "^[A-Z]{2}$" },
          "latitude": { "type": "number", "minimum": -90, "maximum": 90 },
          "longitude": { "type": "number", "minimum": -180, "maximum": 180 },
          "neighborhood": { "type": "string", "maxLength": 100, "description": "Specific neighborhood or district" }
        }
      },

      "TimeContext": {
        "type": "object",
        "properties": {
          "current_hour": { "type": "integer", "minimum": 0, "maximum": 23, "description": "Current hour in 24h format" },
          "meal_period": { "type": "string", "enum": ["breakfast", "lunch", "dinner", "snack", "late_night"], "description": "Current meal period" },
          "is_weekend": { "type": "boolean", "description": "Whether it's weekend" },
          "timezone": { "type": "string", "description": "User's timezone", "example": "America/New_York" }
        }
      },

      "RecommendRequest": {
        "type": "object",
        "properties": {
          "location": { "$ref": "#/components/schemas/Location" },
          "mood_text": { 
            "type": "string", 
            "maxLength": 500,
            "description": "Free text mood description",
            "example": "I'm feeling adventurous and want something spicy"
          },
          "dietary": { 
            "type": "array", 
            "items": { "$ref": "#/components/schemas/DietaryTag" },
            "maxItems": 10
          },
          "social": { "type": "string", "enum": ["solo", "date", "family", "friends", "work"] },
          "budget": { "type": "string", "enum": ["budget", "medium", "premium", "luxury"] },
          "time_context": { "$ref": "#/components/schemas/TimeContext" },
          "preferences": {
            "type": "object",
            "properties": {
              "spice_level": { "type": "string", "enum": ["mild", "medium", "hot", "very_hot"] },
              "cuisine_preference": { "type": "string", "description": "Preferred cuisine type" },
              "avoid_ingredients": { "type": "array", "items": { "type": "string" } }
            }
          },
          "include_partner_restaurants": { "type": "boolean", "default": true, "description": "Include partner restaurant recommendations" }
        }
      },

      "EnhancedRecommendResponse": {
        "type": "object",
        "required": ["success", "food"],
        "properties": {
          "success": { "type": "boolean" },
          "request_id": { "type": "string" },
          "food": { "$ref": "#/components/schemas/Food" },
          "restaurant_info": { "$ref": "#/components/schemas/RestaurantInfo" },
          "friendMessage": { "type": "string" },
          "reasoning": { "type": "string" },
          "culturalNote": { "type": "string" },
          "weatherNote": { "type": "string" },
          "confidence": { "type": "integer", "minimum": 0, "maximum": 100 },
          "quality": {
            "type": "object",
            "properties": {
              "verified": { "type": "boolean" },
              "popular": { "type": "boolean" },
              "local": { "type": "boolean" },
              "fresh_data": { "type": "boolean" },
              "partner_restaurant": { "type": "boolean" }
            }
          },
          "data_freshness": {
            "type": "object",
            "properties": {
              "status": { "type": "string", "enum": ["fresh", "cached", "stale"] },
              "updated": { "type": "string", "format": "date-time" },
              "source": { "type": "string" }
            }
          },
          "distance": { "type": "string" },
          "coverage_level": { "type": "string", "enum": ["high", "medium", "basic"] },
          "dietaryCompliance": { "$ref": "#/components/schemas/DietaryCompliance" },
          "weather": { "$ref": "#/components/schemas/WeatherContext" },
          "alternatives": {
            "type": "array",
            "items": { "$ref": "#/components/schemas/Food" },
            "maxItems": 3,
            "description": "Alternative recommendations"
          },
          "interactionId": { "type": "string" },
          "processingTimeMs": { "type": "integer" }
        }
      },

      "User": {
        "type": "object",
        "required": ["id", "email", "role"],
        "properties": {
          "id": { "type": "string" },
          "email": { "type": "string", "format": "email" },
          "role": { "type": "string", "enum": ["restaurant", "admin"] },
          "restaurant_id": { "type": "string", "description": "Associated restaurant ID (for restaurant users)" },
          "permissions": { "type": "array", "items": { "type": "string" } },
          "created_at": { "type": "string", "format": "date-time" },
          "last_login": { "type": "string", "format": "date-time" }
        }
      },

      "RestaurantInfo": {
        "type": "object",
        "required": ["name", "cuisineType", "city", "country"],
        "properties": {
          "name": { "type": "string", "maxLength": 200 },
          "cuisineType": { 
            "type": "string", 
            "enum": ["italian", "chinese", "japanese", "indian", "mexican", "thai", "french", "american", "mediterranean", "korean", "vietnamese", "middle_eastern", "african", "fusion", "other"],
            "description": "Primary cuisine type"
          },
          "city": { "type": "string", "maxLength": 100 },
          "country": { "type": "string", "maxLength": 100 },
          "country_code": { "type": "string", "minLength": 2, "maxLength": 2 },
          "address": { "type": "string", "maxLength": 500 },
          "neighborhood": { "type": "string", "maxLength": 100 },
          "website": { "type": "string", "format": "uri", "maxLength": 500 },
          "phone": { "type": "string", "maxLength": 20 },
          "description": { "type": "string", "maxLength": 1000 },
          "price_range": { "type": "string", "enum": ["$", "$$", "$$$", "$$$$"] },
          "opening_hours": {
            "type": "object",
            "properties": {
              "monday": { "type": "string", "example": "09:00-22:00" },
              "tuesday": { "type": "string" },
              "wednesday": { "type": "string" },
              "thursday": { "type": "string" },
              "friday": { "type": "string" },
              "saturday": { "type": "string" },
              "sunday": { "type": "string" }
            }
          },
          "features": {
            "type": "array",
            "items": { "type": "string", "enum": ["delivery", "takeout", "dine_in", "outdoor_seating", "wifi", "parking", "wheelchair_accessible", "reservations"] }
          }
        }
      },

      "ContactInfo": {
        "type": "object",
        "required": ["name", "email"],
        "properties": {
          "name": { "type": "string", "maxLength": 100 },
          "email": { "type": "string", "format": "email" },
          "phone": { "type": "string", "maxLength": 20 },
          "position": { "type": "string", "maxLength": 100, "example": "Owner" }
        }
      },

      "RestaurantProfile": {
        "allOf": [
          { "$ref": "#/components/schemas/RestaurantInfo" },
          {
            "type": "object",
            "properties": {
              "restaurant_id": { "type": "string" },
              "status": { "type": "string", "enum": ["active", "pending", "suspended"] },
              "plan": { "type": "string", "enum": ["free", "growth", "scale"] },
              "created_at": { "type": "string", "format": "date-time" },
              "updated_at": { "type": "string", "format": "date-time" },
              "stats": {
                "type": "object",
                "properties": {
                  "menu_items": { "type": "integer" },
                  "recommendations_served": { "type": "integer" },
                  "rating": { "type": "number", "minimum": 0, "maximum": 5 },
                  "reviews_count": { "type": "integer" }
                }
              }
            }
          }
        ]
      },

      "MenuItem": {
        "type": "object",
        "required": ["name", "price", "currency"],
        "properties": {
          "menu_item_id": { "type": "string", "description": "Unique menu item identifier" },
          "name": { "type": "string", "maxLength": 200 },
          "description": { "type": "string", "maxLength": 1000 },
          "price": { "type": "string", "description": "Price as string for international support", "example": "12.99" },
          "currency": { "type": "string", "minLength": 3, "maxLength": 3, "example": "USD" },
          "category": { "type": "string", "enum": ["appetizer", "main", "dessert", "beverage", "side", "special"] },
          "availability": { "type": "string", "enum": ["in_stock", "sold_out", "limited"], "default": "in_stock" },
          "dietary_tags": { "type": "array", "items": { "$ref": "#/components/schemas/DietaryTag" } },
          "spice_level": { "type": "string", "enum": ["mild", "medium", "hot", "very_hot"] },
          "tags": { "type": "array", "items": { "type": "string" }, "description": "Additional tags like 'signature', 'popular', 'seasonal'" },
          "ingredients": { "type": "array", "items": { "type": "string" } },
          "allergens": { "type": "array", "items": { "type": "string" } },
          "macros": {
            "type": "object", 
            "properties": {
              "kcal": { "type": "integer", "minimum": 0 },
              "protein_g": { "type": "number", "minimum": 0 },
              "carbs_g": { "type": "number", "minimum": 0 },
              "fat_g": { "type": "number", "minimum": 0 },
              "fiber_g": { "type": "number", "minimum": 0 },
              "sugar_g": { "type": "number", "minimum": 0 }
            }
          },
          "image_url": { "type": "string", "format": "uri" },
          "prep_time_minutes": { "type": "integer", "minimum": 1 },
          "created_at": { "type": "string", "format": "date-time" },
          "updated_at": { "type": "string", "format": "date-time" }
        }
      },

      "Pagination": {
        "type": "object",
        "required": ["page", "limit", "total", "pages"],
        "properties": {
          "page": { "type": "integer", "minimum": 1 },
          "limit": { "type": "integer", "minimum": 1, "maximum": 100 },
          "total": { "type": "integer", "minimum": 0 },
          "pages": { "type": "integer", "minimum": 0 },
          "has_next": { "type": "boolean" },
          "has_prev": { "type": "boolean" }
        }
      },

      "NightPlanResponse": {
        "type": "object",
        "required": ["success", "city", "planTitle", "timeline", "tips", "total_cost", "walking_distance"],
        "properties": {
          "success": { "type": "boolean" },
          "city": { "type": "string" },
          "country_code": { "type": "string" },
          "planTitle": { "type": "string" },
          "timeline": {
            "type": "array",
            "items": {
              "type": "object",
              "required": ["time", "activity", "food", "emoji", "note", "estimated_cost"],
              "properties": {
                "time": { "type": "string" },
                "activity": { "type": "string" },
                "food": { "type": "string" },
                "emoji": { "type": "string" },
                "note": { "type": "string" },
                "link": { "type": "string" },
                "estimated_cost": { "type": "string" },
                "partner_restaurant": { "type": "boolean" },
                "restaurant_info": { "$ref": "#/components/schemas/RestaurantInfo" }
              }
            }
          },
          "tips": { "type": "array", "items": { "type": "string" } },
          "total_cost": { "type": "string" },
          "walking_distance": { "type": "string" },
          "partner_recommendations": { "type": "integer", "description": "Number of partner restaurant recommendations included" }
        }
      },

      "FoodCrawlResponse": {
        "type": "object",
        "required": ["success", "crawl_title", "city", "stops", "total_cost", "walking_distance"],
        "properties": {
          "success": { "type": "boolean" },
          "crawl_title": { "type": "string" },
          "city": { "type": "string" },
          "duration": { "type": "string" },
          "type": { "type": "string" },
          "stops": {
            "type": "array",
            "items": {
              "type": "object",
              "required": ["order", "time", "location", "food", "emoji", "reason", "cost", "tip"],
              "properties": {
                "order": { "type": "integer" },
                "time": { "type": "string" },
                "location": { "type": "string" },
                "food": { "type": "string" },
                "emoji": { "type": "string" },
                "reason": { "type": "string" },
                "cost": { "type": "string" },
                "tip": { "type": "string" },
                "partner_restaurant": { "type": "boolean" },
                "restaurant_info": { "$ref": "#/components/schemas/RestaurantInfo" }
              }
            }
          },
          "total_cost": { "type": "string" },
          "walking_distance": { "type": "string" },
          "pro_tips": { "type": "array", "items": { "type": "string" } },
          "backup_spots": { "type": "array", "items": { "type": "string" } }
        }
      },

      "CityGuideResponse": {
        "type": "object",
        "required": ["success", "city", "food_scene", "neighborhoods", "local_tips"],
        "properties": {
          "success": { "type": "boolean" },
          "city": { "type": "string" },
          "country_code": { "type": "string" },
          "food_scene": {
            "type": "object",
            "required": ["signature_dishes", "street_food_areas", "local_markets"],
            "properties": {
              "signature_dishes": { "type": "array", "items": { "type": "string" } },
              "street_food_areas": { "type": "array", "items": { "type": "string" } },
              "local_markets": { "type": "array", "items": { "type": "string" } },
              "must_try_restaurants": {
                "type": "array",
                "items": {
                  "type": "object",
                  "required": ["name", "specialty", "price_range"],
                  "properties": {
                    "name": { "type": "string" },
                    "specialty": { "type": "string" },
                    "price_range": { "type": "string", "enum": ["low", "medium", "high"] },
                    "partner_restaurant": { "type": "boolean" },
                    "restaurant_info": { "$ref": "#/components/schemas/RestaurantInfo" }
                  }
                }
              },
              "partner_restaurants_count": { "type": "integer", "description": "Number of partner restaurants in this city" }
            }
          },
          "cultural_highlights": {
            "type": "array",
            "items": { "type": "object", "properties": { "name": { "type": "string" }, "type": { "type": "string" }, "food_nearby": { "type": "string" } } }
          },
          "neighborhoods": {
            "type": "array",
            "items": {
              "type": "object",
              "required": ["name", "vibe", "food_specialty"],
              "properties": {
                "name": { "type": "string" },
                "vibe": { "type": "string" },
                "food_specialty": { "type": "string" },
                "partner_restaurants": { "type": "integer" }
              }
            }
          },
          "local_tips": { "type": "array", "items": { "type": "string" } },
          "food_etiquette": { "type": "string" },
          "best_times": {
            "type": "object",
            "required": ["breakfast", "lunch", "dinner", "street_food"],
            "properties": {
              "breakfast": { "type": "string" },
              "lunch": { "type": "string" },
              "dinner": { "type": "string" },
              "street_food": { "type": "string" }
            }
          }
        }
      },

      "ItineraryResponse": {
        "type": "object",
        "properties": {
          "success": { "type": "boolean" },
          "city": { "type": "string" },
          "country_code": { "type": "string" },
          "duration": { "type": "string" },
          "steps": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "time": { "type": "string" },
                "title": { "type": "string" },
                "why": { "type": "string" },
                "link": { "type": "string" },
                "neighborhood": { "type": "string" },
                "tags": { "type": "array", "items": { "type": "string" } },
                "partner_restaurant": { "type": "boolean" },
                "restaurant_info": { "$ref": "#/components/schemas/RestaurantInfo" }
              }
            }
          },
          "budget": { "type": "string" },
          "interests": { "type": "array", "items": { "type": "string" } }
        }
      },

      "TravelCoachResponse": {
        "type": "object",
        "required": ["success", "response"],
        "properties": {
          "success": { "type": "boolean" },
          "response": { "type": "string" },
          "recommendations": {
            "type": "array",
            "items": {
              "type": "object",
              "required": ["name", "details", "price_range", "location"],
              "properties": {
                "name": { "type": "string" },
                "details": { "type": "string" },
                "price_range": { "type": "string", "enum": ["$", "$", "$$", "$$"] },
                "location": { "type": "string" },
                "partner_restaurant": { "type": "boolean" },
                "restaurant_info": { "$ref": "#/components/schemas/RestaurantInfo" }
              }
            }
          },
          "quick_tips": { "type": "array", "items": { "type": "string" } },
          "follow_up_questions": { "type": "array", "items": { "type": "string" } }
        }
      },

      "EventsResponse": {
        "type": "object",
        "properties": {
          "success": { "type": "boolean" },
          "events": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "id": { "type": "string" },
                "title": { "type": "string" },
                "city": { "type": "string" },
                "country_code": { "type": "string" },
                "when": { "type": "string" },
                "tag": { "type": "string", "enum": ["food", "music", "culture", "market", "festival", "nightlife"] },
                "description": { "type": "string" },
                "location": { "type": "string" },
                "price": { "type": "string" },
                "link": { "type": "string" },
                "partner_sponsored": { "type": "boolean", "description": "Whether this event is sponsored by a partner restaurant" }
              }
            }
          },
          "total_count": { "type": "integer" },
          "partner_events": { "type": "integer", "description": "Number of partner-sponsored events" }
        }
      },

      "CoverageResponse": {
        "type": "object",
        "properties": {
          "success": { "type": "boolean" },
          "city": { "type": "string" },
          "coverage": { "type": "string", "enum": ["high", "medium", "basic"] },
          "stats": {
            "type": "object",
            "properties": {
              "restaurants": { "type": "integer" },
              "partner_restaurants": { "type": "integer" },
              "events": { "type": "integer" },
              "accuracy": { "type": "integer" }
            }
          },
          "features": {
            "type": "object",
            "properties": {
              "food_suggestions": { "type": "boolean" },
              "travel_planning": { "type": "boolean" },
              "events": { "type": "boolean" },
              "real_time_data": { "type": "boolean" },
              "partner_integration": { "type": "boolean" }
            }
          },
          "limitations": { "type": "array", "items": { "type": "string" } }
        }
      },

      "DataStatusResponse": {
        "type": "object",
        "properties": {
          "success": { "type": "boolean" },
          "city": { "type": "string" },
          "freshness": {
            "type": "object",
            "properties": {
              "restaurants": { "type": "object", "properties": { "updated": { "type": "integer" }, "status": { "type": "string", "enum": ["fresh", "stale"] } } },
              "partner_menus": { "type": "object", "properties": { "updated": { "type": "integer" }, "status": { "type": "string", "enum": ["fresh", "stale"] } } },
              "events": { "type": "object", "properties": { "updated": { "type": "integer" }, "status": { "type": "string", "enum": ["fresh", "stale"] } } },
              "weather": { "type": "object", "properties": { "updated": { "type": "integer" }, "status": { "type": "string", "enum": ["fresh", "stale"] } } }
            }
          },
          "coverage": { "type": "string", "enum": ["high", "medium", "basic"] }
        }
      },

      "Food": {
        "type": "object",
        "required": ["name"],
        "properties": {
          "dish_id": { "type": "string" },
          "name": { "type": "string" },
          "emoji": { "type": "string" },
          "country": { "type": "string" },
          "country_code": { "type": "string" },
          "category": { "type": "string" },
          "type": { "type": "string" },
          "description": { "type": "string" },
          "price": { "type": "string" },
          "currency": { "type": "string" },
          "menu_item_id": { "type": "string", "description": "Reference to partner restaurant menu item" },
          "restaurant_id": { "type": "string", "description": "Partner restaurant ID" },
          "suitability": {
            "type": "object",
            "properties": {
              "vegetarian": { "type": "boolean" },
              "vegan": { "type": "boolean" },
              "gluten_free": { "type": "boolean" },
              "dairy_free": { "type": "boolean" },
              "halal_friendly": { "type": "boolean" },
              "nut_free": { "type": "boolean" }
            }
          },
          "nutritional_info": {
            "type": "object",
            "properties": {
              "kcal": { "type": "integer" },
              "protein_g": { "type": "number" },
              "carbs_g": { "type": "number" },
              "fat_g": { "type": "number" }
            }
          },
          "spice_level": { "type": "string", "enum": ["mild", "medium", "hot", "very_hot"] },
          "prep_time_minutes": { "type": "integer" },
          "image_url": { "type": "string", "format": "uri" }
        }
      },

      "DietaryCompliance": {
        "type": "object",
        "properties": {
          "compliant": { "type": "boolean" },
          "warnings": { "type": "array", "items": { "type": "string" } },
          "alternatives": { "type": "array", "items": { "type": "string" } },
          "confidence": { "type": "integer", "minimum": 0, "maximum": 100 },
          "source": { "type": "string", "enum": ["ai", "restaurant_verified", "fallback"] }
        }
      },

      "WeatherContext": {
        "type": "object",
        "properties": {
          "temperature": { "type": "number" },
          "condition": { "type": "string" },
          "description": { "type": "string" },
          "isRaining": { "type": "boolean" },
          "isCold": { "type": "boolean" },
          "isHot": { "type": "boolean" },
          "isComfortable": { "type": "boolean" },
          "simulated": { "type": "boolean" }
        }
      },

      "DietaryTag": {
        "type": "string",
        "enum": ["vegetarian", "vegan", "gluten-free", "dairy-free", "halal", "kosher", "nut-free", "keto", "low-carb", "paleo"]
      },

      "Error": {
        "type": "object",
        "required": ["success", "error"],
        "properties": {
          "success": { "type": "boolean", "enum": [false] },
          "error": { "type": "string" },
          "error_code": { "type": "string", "description": "Machine-readable error code" },
          "details": { "type": "string" },
          "request_id": { "type": "string" },
          "timestamp": { "type": "string", "format": "date-time" },
          "help_url": { "type": "string", "format": "uri", "description": "Link to documentation or help" }
        }
      }
    }
  }
}