{"version":3,"file":"index-C0fpGD71.js","sources":["../../src/services/foodService.js","../../src/utils/helpers.js","../../src/main.js"],"sourcesContent":["const BASE = import.meta.env.VITE_MCP_SERVER_URL;\n\nexport async function getCountries() {\n  const res = await fetch(`${BASE}/v1/countries`);\n  if (!res.ok) throw new Error(\"Failed to load countries\");\n  return (await res.json()).countries; // [{name, code}]\n}\n\nexport async function getFoodSuggestion({ mood, location, dietary = [] }) {\n  const res = await fetch(`${BASE}/mcp/get_food_suggestion`, {\n    method: \"POST\",\n    headers: { \"Content-Type\": \"application/json\" },\n    body: JSON.stringify({ mood, location, dietary })\n  });\n  if (!res.ok) {\n    const text = await res.text().catch(() => \"\");\n    throw new Error(`Suggest failed: ${res.status} ${text}`);\n  }\n  return res.json();\n}","export function countryCodeToEmoji(cc) {\n    const code = (cc || \"\").toUpperCase();\n    if (code.length !== 2) return \"🏳️\";\n    const A = 0x1F1E6;\n    return String.fromCodePoint(A + (code.charCodeAt(0) - 65))\n         + String.fromCodePoint(A + (code.charCodeAt(1) - 65));\n  }\n  ","import { getCountries, getFoodSuggestion } from \"./services/foodService.js\";\nimport { countryCodeToEmoji } from \"./utils/helpers.js\";\n\n\n// Basic front-end wiring to your Express server\nconst SERVER = 'http://localhost:3001';\nconst API_KEY = 'demo_growth_key_456'; // demo vendor key for upload endpoints\n\n// Elements\nconst moodInput = document.getElementById('moodInput');\nconst decideBtn = document.getElementById('decideBtn');\nconst detectMoodBtn = document.getElementById('detectMoodBtn');\nconst citySelect = document.getElementById('citySelect');\nconst latInput = document.getElementById('latInput');\nconst lngInput = document.getElementById('lngInput');\nconst budgetSelect = document.getElementById('budgetSelect');\n\nconst resultCard = document.getElementById('resultCard');\nconst foodEmoji = document.getElementById('foodEmoji');\nconst foodName = document.getElementById('foodName');\nconst foodType = document.getElementById('foodType');\nconst friendMessage = document.getElementById('friendMessage');\nconst reasoning = document.getElementById('reasoning');\nconst culturalNote = document.getElementById('culturalNote');\nconst dietaryNote = document.getElementById('dietaryNote');\nconst weatherNote = document.getElementById('weatherNote');\nconst countryCode = document.getElementById('countryCode');\nconst confidence = document.getElementById('confidence');\nconst weatherBadge = document.getElementById('weatherBadge');\n\nconst menuTextarea = document.getElementById('menuTextarea');\nconst uploadMenuBtn = document.getElementById('uploadMenuBtn');\nconst viewMenuBtn = document.getElementById('viewMenuBtn');\nconst menuResponse = document.getElementById('menuResponse');\nconst chipsWrap = document.getElementById('dietaryChips');\n\nconst DIETARY = [\n  'vegetarian','vegan','gluten-free','dairy-free','keto','halal',\n  'kosher','nut-free','paleo','pescatarian'\n];\n\n// Render dietary chips\nfunction renderChips() {\n  chipsWrap.innerHTML = '';\n  DIETARY.forEach(tag => {\n    const id = `diet_${tag}`;\n    const chip = document.createElement('label');\n    chip.className = 'chip';\n    chip.innerHTML = `<input type=\"checkbox\" id=\"${id}\" value=\"${tag}\"><span>${tag}</span>`;\n    chipsWrap.appendChild(chip);\n  });\n}\nrenderChips();\n\nfunction getSelectedDietary() {\n  return Array.from(chipsWrap.querySelectorAll('input[type=\"checkbox\"]:checked')).map(c => c.value);\n}\n\nfunction getLocation() {\n  const base = JSON.parse(citySelect.value);\n  const lat = parseFloat(latInput.value);\n  const lng = parseFloat(lngInput.value);\n  if (!isNaN(lat) && !isNaN(lng)) {\n    base.latitude = lat;\n    base.longitude = lng;\n  }\n  return base;\n}\n\n// Quick mood buttons\ndocument.querySelectorAll('[data-quick]').forEach(btn => {\n  btn.addEventListener('click', () => {\n    const map = {\n      tired: 'tired and need something comforting',\n      stressed: 'stressed but want something light',\n      celebrating: 'celebrating a small win',\n      hungry: 'very hungry and need food fast'\n    };\n    moodInput.value = map[btn.dataset.quick] || btn.dataset.quick;\n  });\n});\n\n// OPTIONAL demo mood detection — we just echo back\nif (detectMoodBtn) {\n  detectMoodBtn.addEventListener('click', () => {\n    if (!moodInput.value.trim()) {\n      moodInput.value = 'stressed but want something light';\n    }\n    // In a future iteration you can add a dedicated /mood endpoint.\n    detectMoodBtn.textContent = '🧠 Mood understood!';\n    setTimeout(() => (detectMoodBtn.textContent = '✨ Detect Mood (AI)'), 1200);\n  });\n}\n\n// Main recommend call\ndecideBtn.addEventListener('click', async () => {\n  const mood_text = moodInput.value.trim() || 'hungry';\n  const location = getLocation();\n  const dietary = getSelectedDietary();\n  const budget = budgetSelect.value;\n\n  decideBtn.disabled = true;\n  decideBtn.textContent = '🤖 Thinking...';\n\n  try {\n    const res = await fetch(`${SERVER}/v1/recommend`, {\n      method: 'POST',\n      headers: { 'Content-Type': 'application/json', 'Authorization': 'Bearer demo_growth_key_456' }, // can be omitted for /v1/recommend if public; keeping for consistency\n      body: JSON.stringify({\n        location,\n        mood_text,\n        dietary,\n        budget,\n        menu_source: 'global_database'\n      })\n    });\n\n    const data = await res.json();\n    if (!res.ok) throw new Error(data.error || 'Request failed');\n\n    // Populate result\n    const food = data.food || {};\n    foodEmoji.textContent = food.emoji || '🍽️';\n    foodName.textContent = food.name || 'Great Choice';\n    foodType.textContent = food.type ? `Cuisine: ${food.type}` : '';\n\n    friendMessage.textContent = data.friendMessage || data.description || '';\n    reasoning.textContent = data.reasoning || data.reason || '';\n    culturalNote.textContent = data.culturalNote || '';\n    dietaryNote.textContent = data.dietaryNote || '';\n    weatherNote.textContent = data.weatherNote || data.weatherReasoning || '';\n\n    countryCode.textContent = food.country_code ? `🇺🇳 ${food.country_code}` : '—';\n    confidence.textContent = typeof data.confidence === 'number' ? `Confidence: ${data.confidence}%` : 'Confidence: —';\n    weatherBadge.textContent = data?.weather?.description\n      ? `Weather: ${data.weather.temperature}°C • ${data.weather.description}`\n      : 'Weather: —';\n\n    resultCard.style.display = 'block';\n  } catch (e) {\n    alert(`Error: ${e.message}`);\n  } finally {\n    decideBtn.disabled = false;\n    decideBtn.textContent = '🎯 Decide For Me';\n  }\n});\n\n// Accept / Try again (simple UX)\ndocument.getElementById('acceptBtn').addEventListener('click', () => {\n  alert('✅ Saved! Enjoy your meal.');\n  resultCard.style.display = 'none';\n});\ndocument.getElementById('tryAgainBtn').addEventListener('click', () => {\n  decideBtn.click();\n});\n\n// Vendor Upload panel\nuploadMenuBtn.addEventListener('click', async () => {\n  try {\n    const menu = JSON.parse(menuTextarea.value);\n    const res = await fetch(`${SERVER}/v1/menus`, {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json',\n        'Authorization': `Bearer ${API_KEY}`\n      },\n      body: JSON.stringify({ mode: 'snapshot', menu })\n    });\n    const data = await res.json();\n    menuResponse.textContent = JSON.stringify(data, null, 2);\n  } catch (e) {\n    menuResponse.textContent = `Error: ${e.message}`;\n  }\n});\n\nviewMenuBtn.addEventListener('click', async () => {\n  try {\n    const res = await fetch(`${SERVER}/v1/menus`, {\n      headers: { 'Authorization': `Bearer ${API_KEY}` }\n    });\n    const data = await res.json();\n    menuResponse.textContent = JSON.stringify(data, null, 2);\n  } catch (e) {\n    menuResponse.textContent = `Error: ${e.message}`;\n  }\n  let countries = [];\nlet selectedCountry = null;\nlet city = \"London\";\nlet mood = \"\";\nlet dietary = []; // hook up your own chips if you have them\nlet result = null;\n\nasync function initCountries() {\n  try {\n    countries = await getCountries();\n    const sel = document.getElementById(\"countrySelect\");\n    if (!sel) return;\n    sel.innerHTML = `<option value=\"\" disabled selected>Select your country</option>` +\n      countries.map(c => `<option value=\"${c.code}\">${c.name}</option>`).join(\"\");\n  } catch (e) { console.error(e); }\n}\n\nfunction renderFlag() {\n  const el = document.getElementById(\"selectedFlag\");\n  if (!el) return;\n  el.textContent = selectedCountry?.code ? countryCodeToEmoji(selectedCountry.code) : \"\";\n}\n\nfunction renderLoading(v) {\n  const el = document.getElementById(\"loading\");\n  if (el) el.style.display = v ? \"block\" : \"none\";\n}\n\nfunction renderError(msg) {\n  const el = document.getElementById(\"error\");\n  if (el) el.textContent = msg || \"\";\n}\n\nfunction renderResultBox() {\n  const box = document.getElementById(\"resultBox\");\n  if (!box) return;\n  if (!result) { box.innerHTML = \"\"; return; }\n  const header = `${selectedCountry?.code ? countryCodeToEmoji(selectedCountry.code) + \" \" : \"\"}${city ? city + \", \" : \"\"}${selectedCountry?.name || \"\"}`;\n\n  box.innerHTML = `\n    <div class=\"header\">${header}</div>\n    ${result.friendMessage ? `<div class=\"friend\">${result.friendMessage}</div>` : \"\"}\n    ${result.dietaryNote ? `<div class=\"note\">${result.dietaryNote}</div>` : \"\"}\n    ${result.weatherNote ? `<div class=\"note\">${result.weatherNote}</div>` : \"\"}\n    ${result.food ? `\n      <div class=\"food\">\n        <div class=\"title\">${result.food.emoji ? result.food.emoji + \" \" : \"\"}${result.food.name}</div>\n        ${result.culturalNote ? `<div class=\"note\">${result.culturalNote}</div>` : \"\"}\n      </div>` : \"\"}\n    ${\n      Array.isArray(result.alternatives) && result.alternatives.length\n        ? `<div class=\"alts\">\n            <div class=\"alt-title\">Alternatives</div>\n            <ul>${result.alternatives.map(a => `<li>${a.emoji ? a.emoji + \" \" : \"\"}${a.name}</li>`).join(\"\")}</ul>\n          </div>`\n        : \"\"\n    }\n  `;\n}\n\ndocument.addEventListener(\"DOMContentLoaded\", () => {\n  initCountries();\n\n  document.getElementById(\"countrySelect\")?.addEventListener(\"change\", (e) => {\n    const code = e.target.value;\n    selectedCountry = countries.find(c => c.code === code) || null;\n    renderFlag();\n  });\n\n  document.getElementById(\"cityInput\")?.addEventListener(\"input\", (e) => { city = e.target.value; });\n  document.getElementById(\"moodInput\")?.addEventListener(\"input\", (e) => { mood = e.target.value; });\n\n  document.getElementById(\"decideBtn\")?.addEventListener(\"click\", async () => {\n    try {\n      renderError(\"\"); renderLoading(true); result = null; renderResultBox();\n      if (!selectedCountry?.code) throw new Error(\"Please select a country.\");\n\n      const payload = {\n        mood: mood || \"surprise me with something balanced\",\n        location: {\n          city: city || \"\",\n          country: selectedCountry.name,\n          country_code: selectedCountry.code\n        },\n        dietary\n      };\n\n      result = await getFoodSuggestion(payload);\n      renderResultBox();\n    } catch (e) {\n      renderError(e.message || \"Something went wrong\");\n    } finally {\n      renderLoading(false);\n    }\n  });\n});\n\n});\n"],"names":["BASE","getCountries","res","getFoodSuggestion","mood","location","dietary","text","countryCodeToEmoji","cc","code","A","SERVER","API_KEY","moodInput","decideBtn","detectMoodBtn","citySelect","latInput","lngInput","budgetSelect","resultCard","foodEmoji","foodName","foodType","friendMessage","reasoning","culturalNote","dietaryNote","weatherNote","countryCode","confidence","weatherBadge","menuTextarea","uploadMenuBtn","viewMenuBtn","menuResponse","chipsWrap","DIETARY","renderChips","tag","id","chip","getSelectedDietary","c","getLocation","base","lat","lng","btn","map","mood_text","budget","data","food","_a","e","menu","countries","selectedCountry","city","result","initCountries","sel","renderFlag","el","renderLoading","v","renderError","msg","renderResultBox","box","header","a","_b","_c","_d","payload"],"mappings":"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"}