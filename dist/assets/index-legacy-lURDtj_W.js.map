{"version":3,"file":"index-legacy-lURDtj_W.js","sources":["../../src/services/foodService.js","../../src/utils/helpers.js","../../src/main.js"],"sourcesContent":["const BASE = import.meta.env.VITE_MCP_SERVER_URL;\n\nexport async function getCountries() {\n  const res = await fetch(`${BASE}/v1/countries`);\n  if (!res.ok) throw new Error(\"Failed to load countries\");\n  return (await res.json()).countries; // [{name, code}]\n}\n\nexport async function getFoodSuggestion({ mood, location, dietary = [] }) {\n  const res = await fetch(`${BASE}/mcp/get_food_suggestion`, {\n    method: \"POST\",\n    headers: { \"Content-Type\": \"application/json\" },\n    body: JSON.stringify({ mood, location, dietary })\n  });\n  if (!res.ok) {\n    const text = await res.text().catch(() => \"\");\n    throw new Error(`Suggest failed: ${res.status} ${text}`);\n  }\n  return res.json();\n}","export function countryCodeToEmoji(cc) {\n    const code = (cc || \"\").toUpperCase();\n    if (code.length !== 2) return \"🏳️\";\n    const A = 0x1F1E6;\n    return String.fromCodePoint(A + (code.charCodeAt(0) - 65))\n         + String.fromCodePoint(A + (code.charCodeAt(1) - 65));\n  }\n  ","import { getCountries, getFoodSuggestion } from \"./services/foodService.js\";\nimport { countryCodeToEmoji } from \"./utils/helpers.js\";\n\n\n// Basic front-end wiring to your Express server\nconst SERVER = 'http://localhost:3001';\nconst API_KEY = 'demo_growth_key_456'; // demo vendor key for upload endpoints\n\n// Elements\nconst moodInput = document.getElementById('moodInput');\nconst decideBtn = document.getElementById('decideBtn');\nconst detectMoodBtn = document.getElementById('detectMoodBtn');\nconst citySelect = document.getElementById('citySelect');\nconst latInput = document.getElementById('latInput');\nconst lngInput = document.getElementById('lngInput');\nconst budgetSelect = document.getElementById('budgetSelect');\n\nconst resultCard = document.getElementById('resultCard');\nconst foodEmoji = document.getElementById('foodEmoji');\nconst foodName = document.getElementById('foodName');\nconst foodType = document.getElementById('foodType');\nconst friendMessage = document.getElementById('friendMessage');\nconst reasoning = document.getElementById('reasoning');\nconst culturalNote = document.getElementById('culturalNote');\nconst dietaryNote = document.getElementById('dietaryNote');\nconst weatherNote = document.getElementById('weatherNote');\nconst countryCode = document.getElementById('countryCode');\nconst confidence = document.getElementById('confidence');\nconst weatherBadge = document.getElementById('weatherBadge');\n\nconst menuTextarea = document.getElementById('menuTextarea');\nconst uploadMenuBtn = document.getElementById('uploadMenuBtn');\nconst viewMenuBtn = document.getElementById('viewMenuBtn');\nconst menuResponse = document.getElementById('menuResponse');\nconst chipsWrap = document.getElementById('dietaryChips');\n\nconst DIETARY = [\n  'vegetarian','vegan','gluten-free','dairy-free','keto','halal',\n  'kosher','nut-free','paleo','pescatarian'\n];\n\n// Render dietary chips\nfunction renderChips() {\n  chipsWrap.innerHTML = '';\n  DIETARY.forEach(tag => {\n    const id = `diet_${tag}`;\n    const chip = document.createElement('label');\n    chip.className = 'chip';\n    chip.innerHTML = `<input type=\"checkbox\" id=\"${id}\" value=\"${tag}\"><span>${tag}</span>`;\n    chipsWrap.appendChild(chip);\n  });\n}\nrenderChips();\n\nfunction getSelectedDietary() {\n  return Array.from(chipsWrap.querySelectorAll('input[type=\"checkbox\"]:checked')).map(c => c.value);\n}\n\nfunction getLocation() {\n  const base = JSON.parse(citySelect.value);\n  const lat = parseFloat(latInput.value);\n  const lng = parseFloat(lngInput.value);\n  if (!isNaN(lat) && !isNaN(lng)) {\n    base.latitude = lat;\n    base.longitude = lng;\n  }\n  return base;\n}\n\n// Quick mood buttons\ndocument.querySelectorAll('[data-quick]').forEach(btn => {\n  btn.addEventListener('click', () => {\n    const map = {\n      tired: 'tired and need something comforting',\n      stressed: 'stressed but want something light',\n      celebrating: 'celebrating a small win',\n      hungry: 'very hungry and need food fast'\n    };\n    moodInput.value = map[btn.dataset.quick] || btn.dataset.quick;\n  });\n});\n\n// OPTIONAL demo mood detection — we just echo back\nif (detectMoodBtn) {\n  detectMoodBtn.addEventListener('click', () => {\n    if (!moodInput.value.trim()) {\n      moodInput.value = 'stressed but want something light';\n    }\n    // In a future iteration you can add a dedicated /mood endpoint.\n    detectMoodBtn.textContent = '🧠 Mood understood!';\n    setTimeout(() => (detectMoodBtn.textContent = '✨ Detect Mood (AI)'), 1200);\n  });\n}\n\n// Main recommend call\ndecideBtn.addEventListener('click', async () => {\n  const mood_text = moodInput.value.trim() || 'hungry';\n  const location = getLocation();\n  const dietary = getSelectedDietary();\n  const budget = budgetSelect.value;\n\n  decideBtn.disabled = true;\n  decideBtn.textContent = '🤖 Thinking...';\n\n  try {\n    const res = await fetch(`${SERVER}/v1/recommend`, {\n      method: 'POST',\n      headers: { 'Content-Type': 'application/json', 'Authorization': 'Bearer demo_growth_key_456' }, // can be omitted for /v1/recommend if public; keeping for consistency\n      body: JSON.stringify({\n        location,\n        mood_text,\n        dietary,\n        budget,\n        menu_source: 'global_database'\n      })\n    });\n\n    const data = await res.json();\n    if (!res.ok) throw new Error(data.error || 'Request failed');\n\n    // Populate result\n    const food = data.food || {};\n    foodEmoji.textContent = food.emoji || '🍽️';\n    foodName.textContent = food.name || 'Great Choice';\n    foodType.textContent = food.type ? `Cuisine: ${food.type}` : '';\n\n    friendMessage.textContent = data.friendMessage || data.description || '';\n    reasoning.textContent = data.reasoning || data.reason || '';\n    culturalNote.textContent = data.culturalNote || '';\n    dietaryNote.textContent = data.dietaryNote || '';\n    weatherNote.textContent = data.weatherNote || data.weatherReasoning || '';\n\n    countryCode.textContent = food.country_code ? `🇺🇳 ${food.country_code}` : '—';\n    confidence.textContent = typeof data.confidence === 'number' ? `Confidence: ${data.confidence}%` : 'Confidence: —';\n    weatherBadge.textContent = data?.weather?.description\n      ? `Weather: ${data.weather.temperature}°C • ${data.weather.description}`\n      : 'Weather: —';\n\n    resultCard.style.display = 'block';\n  } catch (e) {\n    alert(`Error: ${e.message}`);\n  } finally {\n    decideBtn.disabled = false;\n    decideBtn.textContent = '🎯 Decide For Me';\n  }\n});\n\n// Accept / Try again (simple UX)\ndocument.getElementById('acceptBtn').addEventListener('click', () => {\n  alert('✅ Saved! Enjoy your meal.');\n  resultCard.style.display = 'none';\n});\ndocument.getElementById('tryAgainBtn').addEventListener('click', () => {\n  decideBtn.click();\n});\n\n// Vendor Upload panel\nuploadMenuBtn.addEventListener('click', async () => {\n  try {\n    const menu = JSON.parse(menuTextarea.value);\n    const res = await fetch(`${SERVER}/v1/menus`, {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json',\n        'Authorization': `Bearer ${API_KEY}`\n      },\n      body: JSON.stringify({ mode: 'snapshot', menu })\n    });\n    const data = await res.json();\n    menuResponse.textContent = JSON.stringify(data, null, 2);\n  } catch (e) {\n    menuResponse.textContent = `Error: ${e.message}`;\n  }\n});\n\nviewMenuBtn.addEventListener('click', async () => {\n  try {\n    const res = await fetch(`${SERVER}/v1/menus`, {\n      headers: { 'Authorization': `Bearer ${API_KEY}` }\n    });\n    const data = await res.json();\n    menuResponse.textContent = JSON.stringify(data, null, 2);\n  } catch (e) {\n    menuResponse.textContent = `Error: ${e.message}`;\n  }\n  let countries = [];\nlet selectedCountry = null;\nlet city = \"London\";\nlet mood = \"\";\nlet dietary = []; // hook up your own chips if you have them\nlet result = null;\n\nasync function initCountries() {\n  try {\n    countries = await getCountries();\n    const sel = document.getElementById(\"countrySelect\");\n    if (!sel) return;\n    sel.innerHTML = `<option value=\"\" disabled selected>Select your country</option>` +\n      countries.map(c => `<option value=\"${c.code}\">${c.name}</option>`).join(\"\");\n  } catch (e) { console.error(e); }\n}\n\nfunction renderFlag() {\n  const el = document.getElementById(\"selectedFlag\");\n  if (!el) return;\n  el.textContent = selectedCountry?.code ? countryCodeToEmoji(selectedCountry.code) : \"\";\n}\n\nfunction renderLoading(v) {\n  const el = document.getElementById(\"loading\");\n  if (el) el.style.display = v ? \"block\" : \"none\";\n}\n\nfunction renderError(msg) {\n  const el = document.getElementById(\"error\");\n  if (el) el.textContent = msg || \"\";\n}\n\nfunction renderResultBox() {\n  const box = document.getElementById(\"resultBox\");\n  if (!box) return;\n  if (!result) { box.innerHTML = \"\"; return; }\n  const header = `${selectedCountry?.code ? countryCodeToEmoji(selectedCountry.code) + \" \" : \"\"}${city ? city + \", \" : \"\"}${selectedCountry?.name || \"\"}`;\n\n  box.innerHTML = `\n    <div class=\"header\">${header}</div>\n    ${result.friendMessage ? `<div class=\"friend\">${result.friendMessage}</div>` : \"\"}\n    ${result.dietaryNote ? `<div class=\"note\">${result.dietaryNote}</div>` : \"\"}\n    ${result.weatherNote ? `<div class=\"note\">${result.weatherNote}</div>` : \"\"}\n    ${result.food ? `\n      <div class=\"food\">\n        <div class=\"title\">${result.food.emoji ? result.food.emoji + \" \" : \"\"}${result.food.name}</div>\n        ${result.culturalNote ? `<div class=\"note\">${result.culturalNote}</div>` : \"\"}\n      </div>` : \"\"}\n    ${\n      Array.isArray(result.alternatives) && result.alternatives.length\n        ? `<div class=\"alts\">\n            <div class=\"alt-title\">Alternatives</div>\n            <ul>${result.alternatives.map(a => `<li>${a.emoji ? a.emoji + \" \" : \"\"}${a.name}</li>`).join(\"\")}</ul>\n          </div>`\n        : \"\"\n    }\n  `;\n}\n\ndocument.addEventListener(\"DOMContentLoaded\", () => {\n  initCountries();\n\n  document.getElementById(\"countrySelect\")?.addEventListener(\"change\", (e) => {\n    const code = e.target.value;\n    selectedCountry = countries.find(c => c.code === code) || null;\n    renderFlag();\n  });\n\n  document.getElementById(\"cityInput\")?.addEventListener(\"input\", (e) => { city = e.target.value; });\n  document.getElementById(\"moodInput\")?.addEventListener(\"input\", (e) => { mood = e.target.value; });\n\n  document.getElementById(\"decideBtn\")?.addEventListener(\"click\", async () => {\n    try {\n      renderError(\"\"); renderLoading(true); result = null; renderResultBox();\n      if (!selectedCountry?.code) throw new Error(\"Please select a country.\");\n\n      const payload = {\n        mood: mood || \"surprise me with something balanced\",\n        location: {\n          city: city || \"\",\n          country: selectedCountry.name,\n          country_code: selectedCountry.code\n        },\n        dietary\n      };\n\n      result = await getFoodSuggestion(payload);\n      renderResultBox();\n    } catch (e) {\n      renderError(e.message || \"Something went wrong\");\n    } finally {\n      renderLoading(false);\n    }\n  });\n});\n\n});\n"],"names":["BASE","countryCodeToEmoji","cc","code","toUpperCase","length","A","String","fromCodePoint","charCodeAt","SERVER","API_KEY","moodInput","document","getElementById","decideBtn","detectMoodBtn","citySelect","latInput","lngInput","budgetSelect","resultCard","foodEmoji","foodName","foodType","friendMessage","reasoning","culturalNote","dietaryNote","weatherNote","countryCode","confidence","weatherBadge","menuTextarea","uploadMenuBtn","viewMenuBtn","menuResponse","chipsWrap","DIETARY","innerHTML","forEach","tag","id","chip","createElement","className","appendChild","querySelectorAll","btn","addEventListener","value","tired","stressed","celebrating","hungry","dataset","quick","trim","textContent","setTimeout","async","mood_text","location","base","JSON","parse","lat","parseFloat","lng","isNaN","latitude","longitude","getLocation","dietary","Array","from","map","c","budget","disabled","res","fetch","method","headers","Authorization","body","stringify","menu_source","data","json","ok","Error","error","food","emoji","name","type","description","reason","weatherReasoning","country_code","weather","temperature","style","display","e","alert","message","click","menu","mode","countries","selectedCountry","city","mood","result","initCountries","getCountries","sel","join","console","renderLoading","v","el","renderError","msg","renderResultBox","box","header","isArray","alternatives","a","target","find","renderFlag","payload","country","text","catch","status","getFoodSuggestion"],"mappings":"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"}