{"version":3,"file":"index-legacy-D4SkA3HI.js","sources":["../../src/utils/helpers.js","../../src/main.js"],"sourcesContent":["export function countryCodeToEmoji(cc) {\n    const code = (cc || \"\").toUpperCase();\n    if (code.length !== 2) return \"🏳️\";\n    const A = 0x1F1E6;\n    return String.fromCodePoint(A + (code.charCodeAt(0) - 65))\n         + String.fromCodePoint(A + (code.charCodeAt(1) - 65));\n  }\n  ","import { getCountries, getFoodSuggestion } from \"./services/foodService.js\";\nimport { countryCodeToEmoji } from \"./utils/helpers.js\";\n\n// ------------------ CONFIG ------------------\nconst SERVER = import.meta.env.VITE_MCP_SERVER_URL || 'https://vfied-v3.onrender.com';\nconst API_KEY = 'demo_growth_key_456'; // demo vendor key for upload endpoints\n\n// ------------------ ELEMENTS ------------------\nconst moodInput = document.getElementById('moodInput');\nconst decideBtn = document.getElementById('decideBtn');\nconst detectMoodBtn = document.getElementById('detectMoodBtn');\nconst countrySelect = document.getElementById('countrySelect');\nconst citySelect = document.getElementById('citySelect'); // optional city select\nconst latInput = document.getElementById('latInput');\nconst lngInput = document.getElementById('lngInput');\nconst budgetSelect = document.getElementById('budgetSelect');\n\nconst resultCard = document.getElementById('resultCard');\nconst foodEmoji = document.getElementById('foodEmoji');\nconst foodName = document.getElementById('foodName');\nconst foodType = document.getElementById('foodType');\nconst friendMessage = document.getElementById('friendMessage');\nconst reasoning = document.getElementById('reasoning');\nconst culturalNote = document.getElementById('culturalNote');\nconst dietaryNote = document.getElementById('dietaryNote');\nconst weatherNote = document.getElementById('weatherNote');\nconst countryCode = document.getElementById('countryCode');\nconst confidence = document.getElementById('confidence');\nconst weatherBadge = document.getElementById('weatherBadge');\n\nconst menuTextarea = document.getElementById('menuTextarea');\nconst uploadMenuBtn = document.getElementById('uploadMenuBtn');\nconst viewMenuBtn = document.getElementById('viewMenuBtn');\nconst menuResponse = document.getElementById('menuResponse');\nconst chipsWrap = document.getElementById('dietaryChips');\nconst selectedFlag = document.getElementById('selectedFlag');\n\nconst DIETARY = [\n  'vegetarian','vegan','gluten-free','dairy-free','keto','halal',\n  'kosher','nut-free','paleo','pescatarian'\n];\nlet lastPlanData = null; // holds the most recent plan JSON\nconst LS = {\n  get(k, d=null){ try { return JSON.parse(localStorage.getItem(k)) ?? d; } catch { return d; } },\n  set(k, v){ localStorage.setItem(k, JSON.stringify(v)); }\n};\nconst cityInputFree = document.getElementById('cityInputFree');\nlet lastPayload = null;\n\nconst tabBtns = document.querySelectorAll('.tab-btn');\nconst panels  = document.querySelectorAll('.tab-panel');\ntabBtns.forEach(btn => btn.addEventListener('click', () => {\n  const name = btn.dataset.tab;\n  tabBtns.forEach(b => b.classList.toggle('active', b === btn));\n  panels.forEach(p => p.style.display = p.id === `tab-${name}` ? 'block' : 'none');\n}));\n\nfunction setThinking(on) {\n  const btn = document.getElementById('decideBtn');\n  if (!btn) return;\n  btn.disabled = !!on;\n  btn.textContent = on ? '🤖 Thinking...' : '🎯 Decide For Me';\n  btn.setAttribute('aria-busy', on ? 'true' : 'false');\n}\n\nfunction activateTab(name) {\n  document.querySelectorAll('.tab').forEach(btn => {\n    const isActive = btn.dataset.tab === name;\n    btn.classList.toggle('active', isActive);\n    btn.setAttribute('aria-selected', isActive ? 'true' : 'false');\n  });\n  document.querySelectorAll('.tabpanel').forEach(panel => {\n    panel.classList.toggle('hidden', panel.id !== `tab-${name}`);\n  });\n}\ndocument.addEventListener('click', (e) => {\n  const btn = e.target.closest('.tab');\n  if (!btn) return;\n  activateTab(btn.dataset.tab);\n});\ndocument.addEventListener('DOMContentLoaded', () => {\n  activateTab('food');\n  \n  // Restore saved user preferences\n  const last = LS.get('vfied:lastPayload');\n  const mood = LS.get('vfied:mood');\n  const diet = LS.get('vfied:dietary', []);\n  const budg = LS.get('vfied:budget');\n  const savedCity = LS.get('vfied:city'); \n  \n  if(savedCity && cityInputFree) cityInputFree.value = savedCity;\n\n  if (mood) document.getElementById('moodInput').value = mood;\n  if (diet?.length) {\n    diet.forEach(v => {\n      const el = document.querySelector(`#dietaryChips input[value=\"${v}\"]`);\n      if (el) el.checked = true;\n    });\n  }\n  if (budg) { budgetSelect.value = budg; }\n\n  // If you're using #citySelect with JSON options, try to match country_code\n  try {\n    const code = last?.location?.country_code;\n    const sel = document.getElementById('citySelect');\n    if (code && sel) {\n      for (const opt of sel.options) {\n        const val = JSON.parse(opt.value);\n        if (val.country_code === code) { sel.value = opt.value; break; }\n      }\n    }\n  } catch {}\n});\n// ------------------ RENDER ------------------\nfunction renderChips() {\n  chipsWrap.innerHTML = '';\n  DIETARY.forEach(tag => {\n    const id = `diet_${tag}`;\n    const chip = document.createElement('label');\n    chip.className = 'chip';\n    chip.innerHTML = `<input type=\"checkbox\" id=\"${id}\" value=\"${tag}\"><span>${tag}</span>`;\n    chipsWrap.appendChild(chip);\n  });\n}\nrenderChips();\n\n// Add after line 45 (after renderChips();):\n// Save on change\nmoodInput?.addEventListener('input', e => LS.set('vfied:mood', e.target.value));\nbudgetSelect?.addEventListener('change', e => LS.set('vfied:budget', e.target.value));\n\n// Save dietary on change\nchipsWrap?.addEventListener('change', () => {\n  const vals = Array.from(chipsWrap.querySelectorAll('input[type=\"checkbox\"]:checked')).map(x => x.value);\n  LS.set('vfied:dietary', vals);\n});\n\n// Save location (citySelect holds JSON per option)\ncitySelect?.addEventListener('change', e => {\n  try {\n    const val = JSON.parse(e.target.value);\n    LS.set('vfied:location', val);\n  } catch {}\n});\n// Add after existing save handlers:\ncityInputFree?.addEventListener('input', e => LS.set('vfied:city', e.target.value));\nfunction getSelectedDietary() {\n  return Array.from(chipsWrap.querySelectorAll('input[type=\"checkbox\"]:checked')).map(c => c.value);\n}\n\nfunction getLocation() {\n  const countrySel = document.getElementById('countrySelect');\n  const citySel = document.getElementById('citySelect');\n  let base = { city: 'London', country: 'United Kingdom', country_code: 'GB' };\n\n  try {\n    if (countrySel && countrySel.value) {\n      const c = JSON.parse(countrySel.value);\n      base = {\n        city: '',\n        country: c.name || c.country || '',\n        country_code: c.code || c.country_code || ''\n      };\n    } else if (citySel && citySel.value) {\n      base = JSON.parse(citySel.value);\n    }\n  } catch (e) {\n    console.warn(\"getLocation() parse failed, using default:\", e);\n  }\n\n  // City override from free input\n  const cityOverride = cityInputFree?.value?.trim();\n  if (cityOverride) base.city = cityOverride;\n\n  const lat = parseFloat(latInput?.value ?? \"\");\n  const lng = parseFloat(lngInput?.value ?? \"\");\n  if (!Number.isNaN(lat) && !Number.isNaN(lng)) {\n    base.latitude = lat;\n    base.longitude = lng;\n  }\n  return base;\n}\n\n\n// ------------------ COUNTRY DROPDOWN ------------------\n// Safe country loader (only runs if #countrySelect exists)\nasync function loadCountriesIfPresent() {\n  const sel = document.getElementById('countrySelect');\n  if (!sel) return; // This page uses #citySelect instead. Skip.\n  try {\n    const res = await fetch(`${SERVER}/v1/countries`);\n    const data = await res.json();\n    if (!data?.countries?.length) return;\n    sel.innerHTML =\n      `<option value=\"\" disabled selected>Select your country</option>` +\n      data.countries.map(c => `<option value='${JSON.stringify(c)}'>${c.name}</option>`).join(\"\");\n  } catch (e) {\n    console.warn(\"Countries failed\", e);\n  }\n}\ndocument.addEventListener(\"DOMContentLoaded\", loadCountriesIfPresent);\n\n\ncountrySelect?.addEventListener(\"change\", () => {\n  try {\n    const selected = JSON.parse(countrySelect.value);\n    if (selectedFlag) {\n      // You already import countryCodeToEmoji from helpers\n      selectedFlag.textContent = countryCodeToEmoji(selected.code || selected.country_code);\n    }\n  } catch {}\n});\n\n// ------------------ QUICK MOODS ------------------\ndocument.getElementById('quickMoods')?.addEventListener('click', (e) => {\n  const btn = e.target.closest('.mood-chip');\n  if (!btn) return;\n  // visual active\n  document.querySelectorAll('.mood-chip').forEach(b => b.classList.remove('active'));\n  btn.classList.add('active');\n\n  const map = {\n    tired: 'tired and need something comforting',\n    stressed: 'stressed but want something light',\n    celebrating: 'celebrating a small win',\n    hungry: 'very hungry and need food fast'\n  };\n  const val = map[btn.dataset.quick] || btn.dataset.quick;\n  document.getElementById('moodInput').value = val;\n});\n\n// OPTIONAL demo mood detection\nif (detectMoodBtn) {\n  detectMoodBtn.addEventListener('click', () => {\n    if (!moodInput.value.trim()) {\n      moodInput.value = 'stressed but want something light';\n    }\n    detectMoodBtn.textContent = '🧠 Mood understood!';\n    setTimeout(() => (detectMoodBtn.textContent = '✨ Detect Mood (AI)'), 1200);\n  });\n}\n\n\n// ------------------ MAIN RECOMMEND CALL ------------------\ndecideBtn?.addEventListener('click', async () => {\n  const mood_text = (document.getElementById('moodInput')?.value || '').trim() || 'hungry';\n  const location  = getLocation();\n  const chipsWrap = document.getElementById('dietaryChips');\n  const dietary   = chipsWrap ? Array.from(chipsWrap.querySelectorAll('input[type=\"checkbox\"]:checked')).map(c => c.value) : [];\n  const budget    = document.getElementById('budgetSelect')?.value || 'medium';\n\n  lastPayload = { location, mood_text, dietary, budget, menu_source: 'global_database' };\n  LS.set('vfied:lastPayload', lastPayload);\n  setThinking(true);\n  try {\n    const res  = await fetch(`${SERVER}/v1/recommend`, {\n      method: 'POST',\n      headers: { 'Content-Type': 'application/json' },\n      body: JSON.stringify(lastPayload)\n    });\n    const text = await res.text();\n    const data = JSON.parse(text);\n\n    if (!res.ok || !data?.success) throw new Error(data?.error || `HTTP ${res.status}`);\n\n    // show result\n    const set = (id, v) => { const el = document.getElementById(id); if (el) el.textContent = v; };\n\n    const food = data.food || {};\n    set('foodEmoji',  food.emoji || '🍽️');\n    set('foodName',   food.name  || 'Great Choice');\n    set('friendMessage', data.friendMessage || data.description || '');\n    set('reasoning',  data.reasoning || data.reason || '');\n    set('culturalNote', data.culturalNote || '');\n    set('dietaryNote', data.dietaryNote || '—');\n    set('weatherNote', data.weatherNote || data.weatherReasoning || '—');\n\n    // flag + confidence + weather\n    set('countryCode', food.country_code ? countryCodeToEmoji(food.country_code) : '—');\n    set('confidence', (typeof data.confidence === 'number') ? `Confidence: ${data.confidence}%` : 'Confidence: —');\n    set('weatherBadge',\n      (data?.weather?.description || (data?.weather && data.weather.temperature != null))\n        ? `Weather: ${data.weather.temperature ?? '—'}°C • ${data.weather.description ?? data.weather.condition ?? ''}`.trim()\n        : 'Weather: —'\n    );\n\n    // engine badge\n    const engineEl = document.getElementById('engineBadge');\n    if (engineEl) engineEl.textContent =\n      (data.source === 'gpt' || data.context?.mood_detection_method === 'ai') ? 'Engine: GPT' :\n      (data.source === 'uploaded_menu') ? 'Engine: Vendor Menu' : 'Engine: Fallback';\n\n    document.getElementById('resultCard').style.display = 'block';\n    \n    fetch(`${SERVER}/v1/telemetry`, {\n      method: 'POST', \n      headers: {'Content-Type':'application/json'},\n      body: JSON.stringify({ event: 'decide_success', payload: { location, dietary } })\n    }).catch(()=>{});\n  } catch (e) {\n    console.error(e);\n    alert(`Error: ${e.message}`);\n  } finally {\n    setThinking(false);\n  }\n});\n\n\n//------------------- EVENTS  ------------------\ndocument.getElementById('loadEventsBtn')?.addEventListener('click', async () => {\n  const grid = document.getElementById('eventsGrid');\n  if (!grid) return;\n  const loc = getLocation();\n  const url = `${SERVER}/v1/events?city=${encodeURIComponent(loc.city||'')}&country_code=${encodeURIComponent(loc.country_code||'')}`;\n  grid.innerHTML = '<div class=\"muted\">Loading events…</div>';\n  try {\n    const r = await fetch(url);\n    const data = await r.json();\n    const events = data?.events || [];\n    if (!events.length) {\n      grid.innerHTML = '<div class=\"muted\">No events found.</div>';\n      return;\n    }\n    grid.innerHTML = events.map(e => {\n      const pairing = (loc.country_code === 'KE') ? 'Try Nyama Choma nearby.' :\n                      (loc.country_code === 'GB') ? 'Pair with fish & chips.' :\n                      (loc.country_code === 'JP') ? 'Grab ramen after.' : 'Find a local favorite.';\n      const emoji = e.tag === 'music' ? '🎶' : e.tag === 'food' ? '🍢' : '🎬';\n      return `\n        <div class=\"event-card\">\n          <div class=\"event-badge\">${emoji}</div>\n          <div class=\"event-body\">\n            <div class=\"event-title\">${e.title}</div>\n            <div class=\"event-meta\">${e.when} — ${e.city} ${e.country_code}</div>\n            <div class=\"event-meta\">${pairing}</div>\n            <div class=\"event-cta\">\n              <a class=\"small secondary\" href=\"${SERVER}/v1/linkout?tag=event&url=${encodeURIComponent(`https://www.google.com/search?q=${encodeURIComponent(`${e.title} ${e.city}`)}`)}\" target=\"_blank\" rel=\"noopener\">Book (demo)</a>\n              <button class=\"small\" onclick=\"document.getElementById('decideBtn').scrollIntoView({behavior:'smooth'});\">Suggest food</button>\n            </div>\n          </div>\n        </div>`;\n    }).join('');\n    fetch(`${SERVER}/v1/telemetry`, {\n      method: 'POST', \n      headers: {'Content-Type':'application/json'},\n      body: JSON.stringify({ event: 'events_view', payload: { city: loc.city, code: loc.country_code } })\n    }).catch(()=>{});\n  } catch (e) {\n    grid.innerHTML = '<div class=\"muted\">Failed to load events.</div>';\n  }\n});\n//------------------- TRAVEL  ------------------\ndocument.getElementById('loadTravelBtn')?.addEventListener('click', async () => {\n  const grid  = document.getElementById('travelGrid');\n  const intro = document.getElementById('travelIntro');\n  if (!grid) return;\n\n  const loc = getLocation();\n  const url = `${SERVER}/v1/travel/highlights?city=${encodeURIComponent(loc.city||'')}&country_code=${encodeURIComponent(loc.country_code||'')}`;\n\n  grid.innerHTML = '<div class=\"muted\">Loading must-try…</div>';\n  intro.textContent = '';\n\n  try {\n    const r = await fetch(url);\n    const data = await r.json();\n    intro.textContent = data?.intro || '';\n\n    const dishes = data?.dishes || [];\n    if (!dishes.length) {\n      grid.innerHTML = '<div class=\"muted\">No highlights yet.</div>';\n      return;\n    }\n\n    grid.innerHTML = dishes.map(d => `\n      <div class=\"travel-card\">\n        <div class=\"travel-emoji\">${d.emoji || '🍽️'}</div>\n        <div class=\"travel-body\">\n          <div class=\"travel-title\">${d.name}</div>\n          <div class=\"travel-note\">${d.note || ''}</div>\n          <div class=\"travel-cta\">\n            <button class=\"small\" data-suggest='${encodeURIComponent(JSON.stringify(d))}'>Suggest this</button>\n            <button class=\"small\" onclick=\"window.open('${SERVER}/v1/linkout?tag=maps&url=${encodeURIComponent(`https://www.google.com/maps/search/${encodeURIComponent(`${d.name} ${loc.city||''}`)}`)}}','_blank','noopener')\">Open in Maps</button>\n          </div>\n        </div>\n      </div>\n    `).join('');\n\n  } catch (e) {\n    grid.innerHTML = '<div class=\"muted\">Failed to load highlights.</div>';\n  }\n});\n\n// Delegate clicks on \"Suggest this\" to trigger your existing Decide flow\ndocument.getElementById('tab-travel')?.addEventListener('click', async (e) => {\n  const btn = e.target.closest('button[data-suggest]');\n  if (!btn) return;\n  try {\n    const d = JSON.parse(decodeURIComponent(btn.dataset.suggest));\n    // Build a payload that biases the suggestion to this dish name\n    const loc = getLocation();\n    const mood_text = `I want to try ${d.name}`;\n    const payload = { location: loc, mood_text, dietary: [], budget: 'medium', menu_source: 'global_database' };\n\n    // Optional: smooth scroll to result\n    document.getElementById('decideBtn')?.scrollIntoView({ behavior:'smooth', block:'center' });\n\n    // Call your existing recommend endpoint\n    const res = await fetch(`${SERVER}/v1/recommend`, {\n      method: 'POST',\n      headers: { 'Content-Type': 'application/json' },\n      body: JSON.stringify(payload)\n    });\n    const data = await res.json();\n    if (!res.ok || !data?.success) throw new Error(data?.error || `HTTP ${res.status}`);\n\n    // Render result card\n    document.getElementById('resultCard').style.display = 'block';\n    document.getElementById('foodEmoji').textContent = data.food?.emoji || (d.emoji || '🍽️');\n    document.getElementById('foodName').textContent  = data.food?.name  || d.name;\n    document.getElementById('friendMessage').textContent = data.friendMessage || `Great pick for ${loc.city || 'your trip'}!`;\n\n  } catch (err) {\n    alert('Could not suggest this item.');\n  }\n});\n\n// ------------------ ACCEPT / RETRY ------------------\ndocument.getElementById('acceptBtn').addEventListener('click', () => {\n  alert('✅ Saved! Enjoy your meal.');\n  resultCard.style.display = 'none';\n});\ndocument.getElementById('tryAgainBtn')?.addEventListener('click', async () => {\n  const btn = document.getElementById('tryAgainBtn');\n  btn.disabled = true;\n  setThinking(true);\n  try {\n    const payload = lastPayload || {\n      location: getLocation(),\n      mood_text: (moodInput?.value || 'hungry'),\n      dietary: getSelectedDietary ? getSelectedDietary() : [],\n      budget: budgetSelect?.value || 'medium',\n      menu_source: 'global_database'\n    };\n    const res  = await fetch(`${SERVER}/v1/recommend`, {\n      method: 'POST', headers: { 'Content-Type': 'application/json' },\n      body: JSON.stringify(payload)\n    });\n    const data = await res.json();\n    if (!res.ok || !data?.success) throw new Error(data?.error || `HTTP ${res.status}`);\n\n    // minimal re-render\n    document.getElementById('resultCard').style.display = 'block';\n    document.getElementById('foodEmoji').textContent = data.food?.emoji || '🍽️';\n    document.getElementById('foodName').textContent  = data.food?.name  || 'Great Choice';\n    document.getElementById('friendMessage').textContent = data.friendMessage || '';\n  } catch (e) {\n    alert(`Error: ${e.message}`);\n  } finally {\n    setThinking(false);\n    btn.disabled = false;\n  }\n});\n\n// ------------------ VENDOR UPLOAD ------------------\nuploadMenuBtn.addEventListener('click', async () => {\n  try {\n    const menu = JSON.parse(menuTextarea.value);\n    const res = await fetch(`${SERVER}/v1/menus`, {\n      method: 'POST',\n      headers: { 'Content-Type': 'application/json', 'Authorization': `Bearer ${API_KEY}` },\n      body: JSON.stringify({ mode: 'snapshot', menu })\n    });\n    const data = await res.json();\n\n    if (!res.ok) throw new Error(data.error || 'Upload failed');\n\n    const accepted = (data.summary?.accepted ?? 0);\n    const total    = (data.summary?.total ?? menu.length);\n    const names    = Array.isArray(menu) ? menu.map(m => m.name).filter(Boolean).join(', ') : '';\n\n    menuResponse.textContent =\n      `✅ Menu uploaded (accepted ${accepted}/${total})\\n`+\n      `version: ${data.menu_version}\\n`+\n      (names ? `items: ${names}\\n` : '') +\n      (data.errors?.length ? `errors: ${JSON.stringify(data.errors, null, 2)}` : '');\n\n    // Optional: preview a suggestion from uploaded menu\n    const recRes = await fetch(`${SERVER}/v1/recommend`, {\n      method: \"POST\",\n      headers: { \"Content-Type\": \"application/json\", \"Authorization\": `Bearer ${API_KEY}` },\n      body: JSON.stringify({ menu_source: \"my_uploaded_menu\" })\n    });\n    const recData = await recRes.json();\n    menuResponse.textContent += `\\n\\nSuggestion → ${recData?.food?.name || 'n/a'} ${recData?.food?.emoji || ''}`;\n  } catch (e) {\n    menuResponse.textContent = `❌ ${e.message}`;\n  }\n});\n// ------------------ SERVICE WORKER ------------------\nif ('serviceWorker' in navigator) {\n  window.addEventListener('load', () => {\n    navigator.serviceWorker.register('/sw.js').catch(err => console.warn('SW reg failed', err));\n  });\n}\nviewMenuBtn.addEventListener('click', async () => {\n  try {\n    const res = await fetch(`${SERVER}/v1/menus`, {\n      headers: { 'Authorization': `Bearer ${API_KEY}` }\n    });\n    const data = await res.json();\n    menuResponse.textContent = JSON.stringify(data, null, 2);\n  } catch (e) {\n    menuResponse.textContent = `Error: ${e.message}`;\n  }\n});\n// Add at the very end of main.js:\nlet deferredPrompt=null;\nwindow.addEventListener('beforeinstallprompt', (e)=>{\n  e.preventDefault(); \n  deferredPrompt=e;\n  const b=document.getElementById('installBanner'); \n  if(b) b.style.display='block';\n});\ndocument.getElementById('installBtn')?.addEventListener('click', async ()=>{\n  if(!deferredPrompt) return;\n  deferredPrompt.prompt(); \n  await deferredPrompt.userChoice; \n  deferredPrompt=null;\n  document.getElementById('installBanner').style.display='none';\n});\ndocument.getElementById('installClose')?.addEventListener('click', ()=>{\n  document.getElementById('installBanner').style.display='none';\n});\n// ---- Events ----\nconst eventsGrid = document.getElementById('eventsGrid');\nconst loadEventsBtn = document.getElementById('loadEventsBtn');\n\nloadEventsBtn?.addEventListener('click', async () => {\n  const loc = getLocation();\n  eventsGrid.innerHTML = '<div class=\"muted\">Loading…</div>';\n  try {\n    const r = await fetch(`${SERVER}/v1/events?city=${encodeURIComponent(loc.city||'')}&country_code=${encodeURIComponent(loc.country_code||'')}`);\n    const data = await r.json();\n    const events = data?.events || [];\n    if (!events.length) { eventsGrid.innerHTML = '<div class=\"muted\">No events found.</div>'; return; }\n\n    eventsGrid.innerHTML = events.map(e => {\n      const emoji = e.tag === 'music' ? '🎶' : e.tag === 'food' ? '🍢' : '🎬';\n      const mood  = e.tag === 'music' ? 'celebrating' : e.tag === 'food' ? 'adventurous' : 'relax';\n      const realUrl = `https://www.google.com/search?q=${encodeURIComponent(`${e.title} ${e.city}`)}`;\n      const tracked = `${SERVER}/v1/linkout?tag=event&url=${encodeURIComponent(realUrl)}`;\n      return `\n        <div class=\"event-card\">\n          <div class=\"event-badge\">${emoji}</div>\n          <div class=\"event-body\">\n            <div class=\"event-title\">${e.title}</div>\n            <div class=\"event-meta\">${e.when} — ${e.city} ${e.country_code}</div>\n            <div class=\"row\" style=\"gap:8px; margin-top:6px\">\n              <button class=\"small\" data-suggest-mood=\"${mood}\">Suggest food for this</button>\n              <a class=\"small secondary\" href=\"${tracked}\" target=\"_blank\" rel=\"noopener\">Book (demo)</a>\n            </div>\n          </div>\n        </div>`;\n    }).join('');\n  } catch {\n    eventsGrid.innerHTML = '<div class=\"muted\">Failed to load events.</div>';\n  }\n});\n\n// Delegate: click \"Suggest food for this\"\neventsGrid?.addEventListener('click', async (ev) => {\n  const btn = ev.target.closest('button[data-suggest-mood]');\n  if (!btn) return;\n  const loc = getLocation();\n  const mood_text = `I'm ${btn.dataset.suggestMood} and want something local`;\n  setThinking(true);\n  try {\n    const res = await fetch(`${SERVER}/v1/recommend`, {\n      method:'POST', headers:{'Content-Type':'application/json'},\n      body: JSON.stringify({ location: loc, mood_text, dietary: getSelectedDietary(), budget: budgetSelect?.value || 'medium' })\n    });\n    const data = await res.json();\n    if (data?.success) {\n      resultCard.style.display = 'block';\n      foodEmoji.textContent = data.food?.emoji || '🍽️';\n      foodName.textContent  = data.food?.name  || 'Great Choice';\n      friendMessage.textContent = data.friendMessage || '';\n    }\n  } finally { setThinking(false); }\n});\n// ---- Travel ----\nconst travelGrid = document.getElementById('travelGrid');\nconst loadTravelBtn = document.getElementById('loadTravelBtn');\n\nloadTravelBtn?.addEventListener('click', async () => {\n  const loc = getLocation();\n  travelGrid.innerHTML = '<div class=\"muted\">Loading…</div>';\n  try {\n    const r = await fetch(`${SERVER}/v1/travel/highlights?city=${encodeURIComponent(loc.city||'')}&country_code=${encodeURIComponent(loc.country_code||'')}`);\n    const data = await r.json();\n    const items = data?.highlights || [];\n    if (!items.length) { travelGrid.innerHTML = '<div class=\"muted\">No highlights yet.</div>'; return; }\n\n    travelGrid.innerHTML = items.map(d => {\n      const maps = `https://www.google.com/maps/search/${encodeURIComponent(`${d.name} ${loc.city||''}`)}`;\n      const mapsTracked = `${SERVER}/v1/linkout?tag=maps&url=${encodeURIComponent(maps)}`;\n      return `\n        <div class=\"travel-card\">\n          <div class=\"travel-badge\">${d.emoji || '🗺️'}</div>\n          <div class=\"travel-body\">\n            <div class=\"travel-title\">${d.name}</div>\n            <div class=\"muted\">${d.desc || ''}</div>\n            <div class=\"row\" style=\"gap:8px; margin-top:6px\">\n              <button class=\"small\" data-suggest-food=\"${d.name}\">Suggest food near here</button>\n              <a class=\"small secondary\" href=\"${mapsTracked}\" target=\"_blank\" rel=\"noopener\">Open in Maps</a>\n            </div>\n          </div>\n        </div>`;\n    }).join('');\n  } catch {\n    travelGrid.innerHTML = '<div class=\"muted\">Failed to load highlights.</div>';\n  }\n});\n\nconst copyPlanBtn = document.getElementById('copyPlanBtn');\ncopyPlanBtn?.addEventListener('click', async () => {\n  try {\n    // Prefer the structured JSON (lastPlanData). Fall back to scraping the DOM if needed.\n    let text = '';\n    if (lastPlanData && (lastPlanData.timeline || lastPlanData.plan || lastPlanData.planTitle)) {\n      const city  = lastPlanData.city || '';\n      const title = lastPlanData.planTitle || `Local Night Plan${city ? ' — ' + city : ''}`;\n      const rows  = Array.isArray(lastPlanData.timeline) ? lastPlanData.timeline : [];\n      const tips  = Array.isArray(lastPlanData.tips) ? lastPlanData.tips : [];\n\n      const lines = [];\n      lines.push(title);\n      lines.push('');\n\n      rows.forEach(s => {\n        const t   = s.time ? `${s.time} ` : '';\n        const act = s.activity || s.title || '';\n        const emo = s.emoji ? `${s.emoji} ` : '';\n        lines.push(`${t}${emo}${act}`.trim());\n        if (s.food) lines.push(`  • Food: ${s.food}`);\n        if (s.note) lines.push(`  • ${s.note}`);\n        if (s.link) lines.push(`  • Link: ${s.link}`);\n        lines.push('');\n      });\n\n      if (tips.length) {\n        lines.push('Tips:');\n        tips.forEach(t => lines.push(`  • ${t}`));\n      }\n\n      text = lines.join('\\n');\n    } else {\n      // Fallback: copy whatever is visible in the plan box\n      const box = document.getElementById('planBox');\n      text = box ? box.innerText.trim() : 'Night plan';\n    }\n\n    // Write to clipboard (with fallback)\n    if (navigator.clipboard?.writeText) {\n      await navigator.clipboard.writeText(text);\n      toast('✅ Plan copied to clipboard');\n    } else {\n      // old-school fallback\n      const ta = document.createElement('textarea');\n      ta.value = text;\n      document.body.appendChild(ta);\n      ta.select();\n      document.execCommand('copy');\n      document.body.removeChild(ta);\n      toast('✅ Plan copied');\n    }\n  } catch (e) {\n    alert('Could not copy plan: ' + e.message);\n  }\n});\n\n// tiny toast helper (no deps)\nfunction toast(msg) {\n  const t = document.createElement('div');\n  t.textContent = msg;\n  t.style.position = 'fixed';\n  t.style.bottom = '16px';\n  t.style.left = '50%';\n  t.style.transform = 'translateX(-50%)';\n  t.style.background = '#0b1220';\n  t.style.border = '1px solid #263247';\n  t.style.padding = '10px 14px';\n  t.style.borderRadius = '10px';\n  t.style.color = '#e2e8f0';\n  t.style.fontSize = '14px';\n  t.style.zIndex = '9999';\n  t.style.boxShadow = '0 8px 24px rgba(0,0,0,.35)';\n  document.body.appendChild(t);\n  setTimeout(() => t.remove(), 1500);\n}\n\n// Delegate: \"Suggest food near here\"\ntravelGrid?.addEventListener('click', async (ev) => {\n  const btn = ev.target.closest('button[data-suggest-food]');\n  if (!btn) return;\n  const loc = getLocation();\n  const mood_text = `I want something near ${btn.dataset.suggestFood}, authentic and local.`;\n  setThinking(true);\n  try {\n    const res = await fetch(`${SERVER}/v1/recommend`, {\n      method:'POST', headers:{'Content-Type':'application/json'},\n      body: JSON.stringify({ location: loc, mood_text, dietary: getSelectedDietary(), budget: budgetSelect?.value || 'medium' })\n    });\n    const data = await res.json();\n    if (data?.success) {\n      resultCard.style.display = 'block';\n      foodEmoji.textContent = data.food?.emoji || '🍽️';\n      foodName.textContent  = data.food?.name  || 'Great Choice';\n      friendMessage.textContent = data.friendMessage || '';\n    }\n  } finally { setThinking(false); }\n});\n// ---- GPT Night Plan ----\nconst genPlanBtn = document.getElementById('genPlanBtn');\nconst planPrompt = document.getElementById('planPrompt');\nconst planBox    = document.getElementById('planBox');\n\ngenPlanBtn?.addEventListener('click', async () => {\n  const loc = getLocation();\n  const prompt = (planPrompt?.value?.trim()) || 'I want to try local experiences in the city tonight. Map a night plan with food and vibes.';\n  planBox.innerHTML = '<div class=\"muted\">Planning your night…</div>';\n  try {\n    const r = await fetch(`${SERVER}/v1/travel/plan`, {\n      method:'POST', headers:{'Content-Type':'application/json'},\n      body: JSON.stringify({ location: loc, prompt })\n    });\n    const data = await r.json();\n    lastPlanData = data;\n    if (!data?.success && !data?.timeline) throw new Error('No plan');\n\n    const timeline = (data.timeline || []).map(s => {\n      const url = s.link ? `${SERVER}/v1/linkout?tag=plan&url=${encodeURIComponent(s.link)}` : null;\n      return `\n        <div class=\"step\">\n          <span class=\"time\">${s.time || ''}</span>\n          <span class=\"act\">${s.emoji || ''} ${s.activity || ''}</span>\n          ${s.food ? `<div class=\"muted\">Food: ${s.food}</div>` : ''}\n          ${s.note ? `<div class=\"muted\">${s.note}</div>` : ''}\n          ${url ? `<div><a class=\"small\" href=\"${url}\" target=\"_blank\" rel=\"noopener\">Open link</a></div>` : ''}\n        </div>`;\n    }).join('');\n\n    planBox.innerHTML = `\n      <div class=\"big\" style=\"margin-bottom:6px\">${data.planTitle || 'Local Night Plan'}</div>\n      <div class=\"timeline\">${timeline}</div>\n      ${Array.isArray(data.tips) && data.tips.length ? `\n      <div style=\"margin-top:8px\">\n        <div class=\"event-title\">Tips</div>\n        <ul>${data.tips.map(t => `<li>${t}</li>`).join('')}</ul>\n      </div>` : '' }\n    `;\n  } catch (e) {\n    planBox.innerHTML = `<div class=\"muted\">Couldn't generate a plan: ${e.message}</div>`;\n  }\n});\n\n// Night Plan (demo endpoint)\nconst genNightPlanBtn = document.getElementById('genNightPlanBtn');\n\ngenNightPlanBtn?.addEventListener('click', async () => {\n  const loc = getLocation();\n  planBox.innerHTML = '<div class=\"muted\">Planning your night…</div>';\n  try {\n    const r = await fetch(`${SERVER}/v1/travel/nightplan`, {\n      method: 'POST',\n      headers: { 'Content-Type': 'application/json' },\n      body: JSON.stringify({ location: loc })\n    });\n    const data = await r.json();\n    lastPlanData = data;\n    if (!data?.success && !data?.timeline) throw new Error('No plan generated');\n\n    // Render exactly like your example\n    const timelineHtml = (data.timeline || []).map((s, idx) => {\n      const tracked = s.link ? `${SERVER}/v1/linkout?tag=nightplan&url=${encodeURIComponent(s.link)}` : null;\n      // Encode the step as data-attrs for later use\n      const stepData = {\n        time: s.time || '',\n        activity: s.activity || '',\n        food: s.food || '',\n        emoji: s.emoji || '',\n        note: s.note || ''\n      };\n      const stepAttr = encodeURIComponent(JSON.stringify(stepData));\n      return `\n        <div class=\"step\">\n          <div class=\"big\">${s.time || ''} ${s.emoji || ''} ${s.activity || ''}</div>\n          ${s.food ? `<div>Food: <strong>${s.food}</strong></div>` : ''}\n          ${s.note ? `<div class=\"muted\">${s.note}</div>` : ''}\n          <div class=\"row\" style=\"gap:8px; margin-top:4px\">\n            <button class=\"small suggest-step-btn\" data-step='${stepAttr}'>Suggest food for this step</button>\n            ${tracked ? `<a class=\"small secondary\" href=\"${tracked}\" target=\"_blank\" rel=\"noopener\">Open link</a>` : ''}\n          </div>\n        </div>`;\n    }).join('');\n\n    planBox.innerHTML = `\n      <div class=\"big\">${data.planTitle || `Local Night Plan in ${data.city || ''}`}</div>\n      <div class=\"timeline\" style=\"margin-top:6px\">${timelineHtml}</div>\n      ${\n        Array.isArray(data.tips) && data.tips.length\n          ? `<div style=\"margin-top:10px\"><div class=\"event-title\">Tips</div><ul>${\n              data.tips.map(t => `<li>${t}</li>`).join('')\n            }</ul></div>`\n          : ''\n      }\n    `;\n  } catch (e) {\n    planBox.innerHTML = `<div class=\"muted\">Couldn't generate a plan: ${e.message}</div>`;\n  }\n});\n\n// Delegate: click \"Suggest food for this step\" in the Night Plan\nplanBox?.addEventListener('click', async (ev) => {\n  const btn = ev.target.closest('.suggest-step-btn');\n  if (!btn) return;\n\n  // Extract step data\n  let step = {};\n  try { step = JSON.parse(decodeURIComponent(btn.dataset.step || '%7B%7D')); } catch {}\n  const loc = getLocation();\n\n  // Infer mood from step (simple, effective heuristic)\n  const a = (step.activity || '').toLowerCase();\n  const f = (step.food || '').toLowerCase();\n  let mood_text = 'local, authentic, balanced';\n  if (/walk|market|stroll|crawl|night/i.test(a)) mood_text = 'adventurous street-food vibes';\n  if (/jazz|music|bar|pub|live/i.test(a))        mood_text = 'celebrating with light bites';\n  if (/dinner|signature|restaurant|hearty/i.test(a)) mood_text = 'comforting, authentic, hearty';\n  if (/dessert|sweet|ice cream|gelato/i.test(a)) mood_text = 'sweet finish, light and fun';\n  if (f) mood_text += `, inspired by ${step.food}`;\n\n  // Show a quick loading state on the button\n  const old = btn.textContent;\n  btn.disabled = true;\n  btn.textContent = 'Thinking…';\n\n  try {\n    const res = await fetch(`${SERVER}/v1/recommend`, {\n      method:'POST',\n      headers:{ 'Content-Type':'application/json' },\n      body: JSON.stringify({\n        location: loc,\n        mood_text,\n        dietary: (typeof getSelectedDietary === 'function') ? getSelectedDietary() : [],\n        budget: (budgetSelect?.value || 'medium'),\n        menu_source: 'global_database'\n      })\n    });\n    const data = await res.json();\n    if (!data?.success) throw new Error(data?.error || 'No suggestion');\n\n    // Render into your existing Result Card\n    if (resultCard) resultCard.style.display = 'block';\n    if (foodEmoji)  foodEmoji.textContent   = data.food?.emoji || '🍽️';\n    if (foodName)   foodName.textContent    = data.food?.name  || 'Great Choice';\n    if (friendMessage) friendMessage.textContent = data.friendMessage || `Because this step is \"${step.activity}\"`;\n\n    // KPIs and badges (safe if they exist)\n    const set = (id, v) => { const el = document.getElementById(id); if (el) el.textContent = v; };\n    set('dietaryNote', data.dietaryNote || '—');\n    set('weatherNote', data.weatherNote || data.weatherReasoning || '—');\n    set('countryCode', data.food?.country_code ? countryCodeToEmoji(data.food.country_code) : '—');\n    set('confidence', (typeof data.confidence === 'number') ? `Confidence: ${data.confidence}%` : 'Confidence: —');\n    set('weatherBadge',\n      (data?.weather?.description || (data?.weather && data.weather.temperature != null))\n        ? `Weather: ${data.weather.temperature ?? '—'}°C • ${data.weather.description ?? data.weather.condition ?? ''}`.trim()\n        : 'Weather: —'\n    );\n    const engineEl = document.getElementById('engineBadge');\n    if (engineEl) engineEl.textContent =\n      (data.source === 'gpt' || data.context?.mood_detection_method === 'ai') ? 'Engine: GPT' :\n      (data.source === 'uploaded_menu') ? 'Engine: Vendor Menu' : 'Engine: Fallback';\n\n  } catch (e) {\n    alert(`Couldn't suggest for this step: ${e.message}`);\n  } finally {\n    btn.disabled = false;\n    btn.textContent = old;\n  }\n});"],"names":["countryCodeToEmoji","cc","code","toUpperCase","length","A","String","fromCodePoint","charCodeAt","SERVER","API_KEY","moodInput","document","getElementById","decideBtn","detectMoodBtn","countrySelect","citySelect","latInput","lngInput","budgetSelect","resultCard","foodEmoji","foodName","friendMessage","menuTextarea","uploadMenuBtn","viewMenuBtn","menuResponse","chipsWrap","selectedFlag","DIETARY","lastPlanData","LS","get","k","d","JSON","parse","localStorage","getItem","set","v","setItem","stringify","cityInputFree","lastPayload","tabBtns","querySelectorAll","panels","setThinking","on","btn","disabled","textContent","setAttribute","activateTab","name","forEach","isActive","dataset","tab","classList","toggle","panel","id","getSelectedDietary","Array","from","map","c","value","getLocation","countrySel","citySel","base","city","country","country_code","e","console","warn","cityOverride","trim","lat","parseFloat","lng","Number","isNaN","latitude","longitude","addEventListener","b","p","style","display","target","closest","last","mood","diet","budg","savedCity","el","querySelector","checked","location","sel","opt","options","innerHTML","tag","chip","createElement","className","appendChild","vals","x","val","async","res","fetch","data","json","countries","join","selected","remove","add","tired","stressed","celebrating","hungry","quick","setTimeout","mood_text","dietary","budget","menu_source","method","headers","body","text","ok","success","Error","error","status","food","emoji","description","reasoning","reason","culturalNote","dietaryNote","weatherNote","weatherReasoning","confidence","weather","temperature","condition","engineEl","source","context","mood_detection_method","event","payload","catch","alert","message","grid","loc","url","encodeURIComponent","r","events","pairing","title","when","intro","dishes","note","decodeURIComponent","suggest","scrollIntoView","behavior","block","err","menu","Authorization","mode","accepted","summary","total","names","isArray","m","filter","Boolean","menu_version","errors","recRes","recData","navigator","window","serviceWorker","register","deferredPrompt","preventDefault","prompt","userChoice","eventsGrid","loadEventsBtn","realUrl","tracked","ev","suggestMood","travelGrid","loadTravelBtn","items","highlights","maps","mapsTracked","desc","copyPlanBtn","toast","msg","t","position","bottom","left","transform","background","border","padding","borderRadius","color","fontSize","zIndex","boxShadow","timeline","plan","planTitle","rows","tips","lines","push","s","time","act","activity","emo","link","box","innerText","clipboard","writeText","ta","select","execCommand","removeChild","suggestFood","genPlanBtn","planPrompt","planBox","genNightPlanBtn","timelineHtml","idx","stepData","stepAttr","step","a","toLowerCase","f","test","old"],"mappings":"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"}